[
  {
    "id": 704977266,
    "author": "domainExpert1",
    "ruleName": "ANA",
    "naturalLanguage": "dacÃ„Æ’ timpul utilizatorului de testare ÃƒÂ®n interiorul bÃ„Æ’ii este mai mare de 30, nu trimiteÃˆâ€ºi o alarmÃ„Æ’ prin sms la 1234123412",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "more",
        "parent": "timeInsideARoom",
        "triggerType": "condition",
        "value": "30",
        "element": {
          "realName": "timeInsideBathroom",
          "displayedName": "Time Inside Bathroom",
          "englishDisplayedName": "Time Inside Bathroom",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Text de alarm&#259;",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Alarma"
          },
          {
            "description": "Modul de notificare",
            "displayedName": "Modul de notificare",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "de c&#226;te ori ar trebui trimis&#259; o alert&#259;",
            "displayedName": "Repeti&#355;ie",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Receptor de alarma",
            "displayedName": "La",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "0040721189924"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 419000676,
    "author": "domainExpert2",
    "ruleName": "Erinnerung, ins Freie zu gehen, wenn die Sonne scheint",
    "naturalLanguage": "If the weather weather icon is sun, send a reminder to lisa-marie via SMS",
    "naturalLanguageOriginal": "Wenn das Wetter-Wetter-Symbol sonne ist, senden Sie eine Erinnerung per SMS an lisa-marie",
    "priority": 2,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "currentWeather",
        "triggerType": "condition",
        "value": "Sonne",
        "element": {
          "realName": "weatherIcon",
          "displayedName": "Weather Icon",
          "englishDisplayedName": "Weather Icon",
          "xPath": "environment/currentWeather/@weatherIcon",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text der Erinnerung",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Die Sonne scheint. Bitte gehen Sie ein wenig ins Freie."
          },
          {
            "description": "Erinnerungsfunktion",
            "displayedName": "Erinnerungsfunktion",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "Wiederholung",
            "displayedName": "Wiederholung",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "EINMAL"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "an [Empf&#228;nger der Erinnerung]",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "lisa-marie"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 713172375,
    "author": "domainExpert3",
    "ruleName": "Automatisches Licht im Bad",
    "naturalLanguage": "If the test user is in the bathroom, turn on all lights",
    "naturalLanguageOriginal": "Wenn sich der Testbenutzer im Badezimmer befindet, schalten Sie alle Licht ein",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "BATHROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "description": "All Lights in the bathroom",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "parent": "Bathroom",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 77241990,
    "author": "domainExpert4",
    "ruleName": "Attività  fisica",
    "naturalLanguageOriginal": "se le impronte giornaliere di Test-user sono inferiori a 5000, invia un promemoria via mail a caregiver.1@provider.it",
    "naturalLanguage": "if the Test-user daily steps are less than 5000, send a reminder via email to caregiver.1@provider.it",
    "priority": 4,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "physiological",
        "triggerType": "condition",
        "value": "5000",
        "element": {
          "realName": "steps",
          "displayedName": "Steps",
          "englishDisplayedName": "Steps",
          "xPath": "user/physiological/@steps",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Esercizi sul tapis roulant"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "caregiver.1@provider.it"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1907121792,
    "author": "domainExpert4",
    "ruleName": "Luce in soggiorno",
    "naturalLanguageOriginal": "quando il livello di luce di LivingRoom diventa scarsamente illuminato, fare luce nel soggiorno",
    "naturalLanguage": "when the light level of LivingRoom becomes dimly lit, shed some light in the living room ",
    "priority": 2,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 3,
        "operator": "equal",
        "parent": "livingRoom",
        "triggerType": "event",
        "value": "LOW_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Living Room",
          "realName": "Hue color light Living Room",
          "description": "Living Room Light",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "custom:lightColor"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 905189230,
    "author": "domainExpert4",
    "ruleName": "Great luminaire",
    "naturalLanguage": "if the state of Great Luminaire is off, shed some light in the kitchen",
    "naturalLanguageOriginal": "se lo stato di Great Luminaire è spento, fare luce cucina",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "technology",
        "dimensionId": 8,
        "operator": "equal",
        "parent": "greatLuminaire",
        "triggerType": "condition",
        "value": "OFF",
        "element": {
          "realName": "state",
          "displayedName": "State",
          "englishDisplayedName": "State",
          "xPath": "technology/light/@state",
          "type": "ENUM",
          "possibleValues": {
            "OFF": "Off",
            "ON": "On"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Hue color light Kitchen",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "custom:lightColor"
        },
        "operator": "is",
        "parent": "Kitchen",
        "type": "custom:lightColor"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 851168453,
    "author": "domainExpert4",
    "ruleName": "bedroom_light",
    "naturalLanguage": "When time becomes  15:22 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "15:22",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "E' tanto tempo che non giochi con Kwido, prova a fare una partita!"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 99199286,
    "author": "domainExpert4",
    "ruleName": "aspirina",
    "naturalLanguage": "When time becomes  14:52 minutes ,  do send  one  reminder  by notification,  turn on the   Living Room Light and set color to Red",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "14:52",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricordati di prendere l'aspirina"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      },
      {
        "action": {
          "displayedName": "Color light Living Room",
          "realName": "Hue color light Living Room",
          "description": "Living Room Light",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "LivingRoom",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "0"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1105527972,
    "author": "domainExpert4",
    "ruleName": "Tempo di allenamento",
    "naturalLanguage": "if the training time for the test user is 30, send an alarm by notification",
    "naturalLanguageOriginal": "se il tempo di allenamento per l'utente di prova è 30, inviare un allarme tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "30",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Puoi terminare gli esercizi"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 2007374019,
    "author": "domainExpert4",
    "ruleName": "Dobetin e Lampard ",
    "naturalLanguage": "if Dobetin and Lampard were not taken on 22/06/2019 between 11:05 and 11:06, send two alerts by notification ",
    "naturalLanguageOriginal": "se Dobetin e Lampard non sono stati presi il 22/06/2019 tra le 11:05 e le 11:06, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Dobetin e Lampard",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "22/06/2019",
          "",
          "11:05",
          "11:06"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Dobetin e Lampard "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 462892822,
    "author": "domainExpert4",
    "ruleName": "Cardicor ",
    "naturalLanguage": "if Cardicor has not been taken between 8:04 pm and 9:05 pm, send two alerts by notification",
    "naturalLanguageOriginal": "se Cardicor non è stato preso tra le 20:04 e le 21:05, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Cardicor ",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:04",
          "21:05"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi Cardicor della sera"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1409254731,
    "author": "domainExpert4",
    "ruleName": "Provisacor Sera",
    "naturalLanguage": "if Provisacor has not been taken between 20:11 and 21:12, send two alerts by notification ",
    "naturalLanguageOriginal": "se Provisacor non è stato preso tra le 20:11 e le 21:12, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Provisacor",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:11",
          "21:12"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi Provisacor Sera"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 978742196,
    "author": "domainExpert4",
    "ruleName": "Tardifer pranzo",
    "naturalLanguage": "If Tardifer Lunch was not taken between 1:08 PM and 2:09 PM, please send two alerts by notification",
    "naturalLanguageOriginal": "se Tardifer pranzo non è stato preso tra le 13:08 e le 14:09, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Tardifer pranzo",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "13:08",
          "14:09"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi Tardifer "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 2104560701,
    "author": "domainExpert4",
    "ruleName": "Duoplavin pranzo",
    "naturalLanguage": "se Duoplavin pranzo non è stato preso tra le 13:07 e le 14:09, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Duoplavin pranzo",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "13:07",
          "14:09"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Duoplavin pranzo"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1606185754,
    "author": "domainExpert4",
    "ruleName": "Ganfort collirio",
    "naturalLanguage": "se Ganfort collirio non è stato preso tra le 20:03 e le 21:06, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Ganfort collirio",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:03",
          "21:06"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ganfort collirio sera"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1892053115,
    "author": "domainExpert4",
    "ruleName": "Trusopt collirio sera",
    "naturalLanguage": "se Trusopt collirio sera non è stato preso tra le 20:02 e le 21:05, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Trusopt collirio sera",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:02",
          "21:05"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Trusopt collirio della sera"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 2034544156,
    "author": "domainExpert4",
    "ruleName": "Trusopt collirio pranzo",
    "naturalLanguage": "se Trusopt pranzo non è stato preso tra le 13:03 e le 14:04, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Trusopt pranzo",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "13:03",
          "14:04"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Trusopt collirio pranzo"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 211899885,
    "author": "domainExpert4",
    "ruleName": "Trusopt",
    "naturalLanguage": "se Truopt collirio non è stato preso tra le 07:32 e le 08:02, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Trusopt collirio",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:32",
          "08:02"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Assumi trusopt gocce mattina"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 809092032,
    "author": "domainExpert4",
    "ruleName": "Zoloft",
    "naturalLanguage": "se Zoloft non è stato preso tra le 07:31 e le 08:01, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Zoloft",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:31",
          "08:01"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi lo Zoloft"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1941907476,
    "author": "domainExpert4",
    "ruleName": "Lansoprazolo mattina",
    "naturalLanguage": "se Lansoprazolo non è stato preso tra le 07:30 e le 08:00, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Lansoprazolo",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:30",
          "08:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi Lansoprazolo"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 802638897,
    "author": "domainExpert4",
    "ruleName": "Eucreas della sera",
    "naturalLanguage": "se Eucreas Sera non è stato preso tra le 20:00 e le 21:00, inviare due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Eucreas Sera",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:00",
          "21:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi Eucreas della Sera"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 694118939,
    "author": "domainExpert4",
    "ruleName": "Eucreas Pranzo",
    "naturalLanguage": "se Eucreas pranzo non è stato preso tra le 13:00 e le 14:00, invia due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Eucreas pranzo",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "13:00",
          "14:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi Eucreas pranzo"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1468435251,
    "author": "domainExpert4",
    "ruleName": "Eucreas mattina",
    "naturalLanguage": "Se Eucreas non è stato preso tra le 07:30 e le 08:00, inviare due avvisi tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Eucreas",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:30",
          "08:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Prendi Eucreas della mattina"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1567876703,
    "author": "domainExpert4",
    "ruleName": "prova n2",
    "naturalLanguage": "if  Great Luminaire state is different from  off  and time is  13:37 minutes ,  do send  reminder  by notification",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "technology",
        "dimensionId": 8,
        "nextOperator": "and",
        "operator": "notEqual",
        "parent": "greatLuminaire",
        "triggerType": "condition",
        "value": "OFF",
        "element": {
          "realName": "state",
          "displayedName": "State",
          "englishDisplayedName": "State",
          "xPath": "technology/light/@state",
          "type": "ENUM",
          "possibleValues": {
            "OFF": "Off",
            "ON": "On"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "13:37",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "spegni great luminarie"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1221627652,
    "author": "domainExpert4",
    "ruleName": "great luminarie prova1",
    "naturalLanguage": "if  Great Luminaire state is different from  off  ,  do send  reminder  by notification",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "technology",
        "dimensionId": 8,
        "operator": "notEqual",
        "parent": "greatLuminaire",
        "triggerType": "condition",
        "value": "OFF",
        "element": {
          "realName": "state",
          "displayedName": "State",
          "englishDisplayedName": "State",
          "xPath": "technology/light/@state",
          "type": "ENUM",
          "possibleValues": {
            "OFF": "Off",
            "ON": "On"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "spegni great luminarie"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 437070775,
    "author": "domainExpert4",
    "ruleName": "Luce in soggiorno",
    "naturalLanguage": "quando il livello di luce di LivingRoom diventa scarsamente illuminato, fare luce nel soggiorno",
    "priority": 2,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 3,
        "operator": "equal",
        "parent": "livingRoom",
        "triggerType": "event",
        "value": "LOW_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Living Room",
          "realName": "Hue color light Living Room",
          "description": "Living Room Light",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "custom:lightColor"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 2033312982,
    "author": "domainExpert4",
    "ruleName": "Attività  fisica",
    "naturalLanguage": "se le impronte giornaliere di Test-user sono inferiori a 5000, invia un promemoria via mail a caregiver.1@provider.it",
    "priority": 4,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "physiological",
        "triggerType": "condition",
        "value": "5000",
        "element": {
          "realName": "steps",
          "displayedName": "Steps",
          "englishDisplayedName": "Steps",
          "xPath": "user/physiological/@steps",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Esercizi sul tapis roulant"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "caregiver.1@provider.it"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1571550446,
    "author": "domainExpert5",
    "ruleName": "Fuori casa di sera",
    "naturalLanguage": "L'utente del test è fuori casa e l'ora del tempo è tra le 21:00 e le 22:00, invia due avvisi tramite sms a Caregiver 2",
    "priority": 10,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "OUTSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "HOUSE",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "gt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "21:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Utente 2 è fuori casa di sera tardi"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "2 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Caregiver 2"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1592563941,
    "author": "domainExpert5",
    "ruleName": "Esercizi cognitivi",
    "naturalLanguage": "se il tempo di allenamento del Test-utente è inferiore a 1, inviare un allarme tramite notifica",
    "priority": 4,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "1",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Continua ad esercitarti"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 2112820361,
    "author": "domainExpert5",
    "ruleName": "Assunzione farmaco ",
    "naturalLanguage": "if  Test-user intake time is different from  15:00  ,  do send  one  alarm  by notification",
    "priority": 10,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "notEqual",
        "parent": "medication",
        "triggerType": "condition",
        "value": "15:00",
        "element": {
          "realName": "intakeTime",
          "type": "STRING",
          "xPath": "user/activity/medication/@intakeTime"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Assumere la pasticca delle 15"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1093134839,
    "author": "domainExpert5",
    "ruleName": "Aprovel/Coaprovel",
    "naturalLanguage": "Se Aprovel / Coaprovel non è stato preso tra le 20:00 e le 20:15, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aprovel/Coaprovel",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:00",
          "20:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Aprovel/Coaprovel "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1203160242,
    "author": "domainExpert5",
    "ruleName": "Ibustrin 200 mg 1cp/die",
    "naturalLanguage": "Se Ibustrin 200 mg 1cp / die non è stato preso tra le 14:00 e le 14:15, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Ibustrin 200 mg 1cp /die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "14:00",
          "14:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ibustrin 200 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1590173288,
    "author": "domainExpert5",
    "ruleName": "Norvasc 5 mg 1cp/die",
    "naturalLanguage": "Se Norvasc 5mg 1cp / die non è stato preso tra le 09:05 e le 09:20, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Norvasc 5mg 1cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "09:05",
          "09:20"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Norvasc 5 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1483343173,
    "author": "domainExpert5",
    "ruleName": "Tenormin 1/4 cp/die",
    "naturalLanguage": "Se Tenormin 1/4 cp / die non è stato preso tra le 09:00 e le 09:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Tenormin 1/4 cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "09:00",
          "09:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Tenormin 1/4 compressa"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 645674990,
    "author": "domainExpert5",
    "ruleName": "Assumere Pantorc 1cp/die",
    "naturalLanguage": "Se Pantorc non è stato preso tra le 07:00 e le 07:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Pantorc",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": -2,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:00",
          "07:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ricordati di prendere il Pantorc "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 809749427,
    "author": "domainExpert5",
    "ruleName": "Aplactin 20 mg 1cp/die",
    "naturalLanguage": "Se Aplactin 20 mg 1cp / die non è stato preso tra le 20:05 e le 20:20, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aplactin 20 mg 1cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:05",
          "20:20"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Aplactin 20 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1777644173,
    "author": "domainExpert5",
    "ruleName": "Continua ad esercitarti",
    "naturalLanguage": "se il tempo di allenamento per l'utente di prova è inferiore a 20, inviare un promemoria tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "20",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Testo",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Fai ancora qualche esercizio"
          },
          {
            "description": "Mode",
            "displayedName": "Modo",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Ripetizione",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Destinatario",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1911633770,
    "author": "domainExpert5",
    "ruleName": "Assumere Pantorc 1cp/die",
    "naturalLanguage": "Se Pantorc non è stato preso tra le 07:00 e le 07:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Pantorc",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": -2,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:00",
          "07:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ricordati di prendere il Pantorc "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1285883508,
    "author": "domainExpert5",
    "ruleName": "Continua ad esercitarti",
    "naturalLanguage": "se il tempo di allenamento per l'utente di prova è inferiore a 20, inviare un promemoria tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "20",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Testo",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Fai ancora qualche esercizio"
          },
          {
            "description": "Mode",
            "displayedName": "Modo",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Ripetizione",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Destinatario",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 2116782439,
    "author": "domainExpert5",
    "ruleName": "Assumere Pantorc 1cp/die",
    "naturalLanguage": "Se Pantorc non è stato preso tra le 07:00 e le 07:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Pantorc",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": -2,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:00",
          "07:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ricordati di prendere il Pantorc "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 218246121,
    "author": "domainExpert5",
    "ruleName": "Continua ad esercitarti",
    "naturalLanguage": "se il tempo di allenamento per l'utente di prova è inferiore a 20, inviare un promemoria tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "20",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Testo",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Fai ancora qualche esercizio"
          },
          {
            "description": "Mode",
            "displayedName": "Modo",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Ripetizione",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Destinatario",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 666419871,
    "author": "domainExpert5",
    "ruleName": "Aplactin 20 mg 1cp/die",
    "naturalLanguage": "Se Aplactin 20 mg 1cp / die non è stato preso tra le 20:05 e le 20:20, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aplactin 20 mg 1cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:05",
          "20:20"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Aplactin 20 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1177693475,
    "author": "domainExpert5",
    "ruleName": "Assumere Pantorc 1cp/die",
    "naturalLanguage": "Se Pantorc non è stato preso tra le 07:00 e le 07:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Pantorc",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": -2,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:00",
          "07:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ricordati di prendere il Pantorc "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1348088976,
    "author": "domainExpert5",
    "ruleName": "Continua ad esercitarti",
    "naturalLanguage": "se il tempo di allenamento per l'utente di prova è inferiore a 20, inviare un promemoria tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "20",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Testo",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Fai ancora qualche esercizio"
          },
          {
            "description": "Mode",
            "displayedName": "Modo",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Ripetizione",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Destinatario",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 440645016,
    "author": "domainExpert5",
    "ruleName": "Aplactin 20 mg 1cp/die",
    "naturalLanguage": "Se Aplactin 20 mg 1cp / die non è stato preso tra le 20:05 e le 20:20, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aplactin 20 mg 1cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:05",
          "20:20"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Aplactin 20 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1680834084,
    "author": "domainExpert5",
    "ruleName": "Aprovel/Coaprovel",
    "naturalLanguage": "Se Aprovel / Coaprovel non è stato preso tra le 20:00 e le 20:15, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aprovel/Coaprovel",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:00",
          "20:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Aprovel/Coaprovel "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 372185154,
    "author": "domainExpert5",
    "ruleName": "Ibustrin 200 mg 1cp/die",
    "naturalLanguage": "Se Ibustrin 200 mg 1cp / die non è stato preso tra le 14:00 e le 14:15, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Ibustrin 200 mg 1cp /die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "14:00",
          "14:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ibustrin 200 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 391139491,
    "author": "domainExpert5",
    "ruleName": "Norvasc 5 mg 1cp/die",
    "naturalLanguage": "Se Norvasc 5mg 1cp / die non è stato preso tra le 09:05 e le 09:20, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Norvasc 5mg 1cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "09:05",
          "09:20"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Norvasc 5 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 280549540,
    "author": "domainExpert5",
    "ruleName": "Tenormin 1/4 cp/die",
    "naturalLanguage": "Se Tenormin 1/4 cp / die non è stato preso tra le 09:00 e le 09:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Tenormin 1/4 cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "09:00",
          "09:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Tenormin 1/4 compressa"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 267995849,
    "author": "domainExpert5",
    "ruleName": "Assumere Pantorc 1cp/die",
    "naturalLanguage": "Se Pantorc non è stato preso tra le 07:00 e le 07:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Pantorc",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": -2,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:00",
          "07:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ricordati di prendere il Pantorc "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1648768437,
    "author": "domainExpert5",
    "ruleName": "Continua ad esercitarti",
    "naturalLanguage": "se il tempo di allenamento per l'utente di prova è inferiore a 20, inviare un promemoria tramite notifica",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "20",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Testo",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Fai ancora qualche esercizio"
          },
          {
            "description": "Mode",
            "displayedName": "Modo",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Ripetizione",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Destinatario",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 2008717212,
    "author": "domainExpert5",
    "ruleName": "Aplactin 20 mg 1cp/die",
    "naturalLanguage": "Se Aplactin 20 mg 1cp / die non è stato preso tra le 20:05 e le 20:20, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aplactin 20 mg 1cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:05",
          "20:20"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Aplactin 20 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 482173390,
    "author": "domainExpert5",
    "ruleName": "Aprovel/Coaprovel",
    "naturalLanguage": "Se Aprovel / Coaprovel non è stato preso tra le 20:00 e le 20:15, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aprovel/Coaprovel",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "20:00",
          "20:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Aprovel/Coaprovel "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1243460746,
    "author": "domainExpert5",
    "ruleName": "Ibustrin 200 mg 1cp/die",
    "naturalLanguage": "Se Ibustrin 200 mg 1cp / die non è stato preso tra le 14:00 e le 14:15, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Ibustrin 200 mg 1cp /die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "14:00",
          "14:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ibustrin 200 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 430296033,
    "author": "domainExpert5",
    "ruleName": "Norvasc 5 mg 1cp/die",
    "naturalLanguage": "Se Norvasc 5mg 1cp / die non è stato preso tra le 09:05 e le 09:20, inviare tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Norvasc 5mg 1cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "09:05",
          "09:20"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Norvasc 5 mg 1cp/die"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 981514558,
    "author": "domainExpert5",
    "ruleName": "Tenormin 1/4 cp/die",
    "naturalLanguage": "Se Tenormin 1/4 cp / die non è stato preso tra le 09:00 e le 09:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Tenormin 1/4 cp/die",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "09:00",
          "09:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Tenormin 1/4 compressa"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1304698033,
    "author": "domainExpert5",
    "ruleName": "Assumere Pantorc 1cp/die",
    "naturalLanguage": "Se Pantorc non è stato preso tra le 07:00 e le 07:15, invia tre avvisi tramite notifica",
    "priority": 5,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Pantorc",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": -2,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:00",
          "07:15"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Testo",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ricordati di prendere il Pantorc "
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notifica",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Ripetizione",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "3 TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Destinatario",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1246057138,
    "author": "applicationExpert1",
    "ruleName": "aspirine_taken",
    "naturalLanguage": "if Aspirine has been taken   ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "Aspirine",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Aspirine taken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1665350978,
    "author": "applicationExpert1",
    "ruleName": "aspirine_not_taken_in_time_interval",
    "naturalLanguage": "If Aspirine has not been taken    between 17:18 and 17:22 ,  do send  one  alarm  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "Aspirine",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "17:18",
          "17:22"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Marco did not take the Aspirine!"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 68957425,
    "author": "applicationExpert1",
    "ruleName": "8-no_light",
    "naturalLanguage": "When  Bedroom light level becomes  no light  ,  do start biorhythm light scene in the bedroom",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "NO_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "description": "Start Biorhythm Light Scene in the Bedroom",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "BiorhythmLight"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 469433638,
    "author": "applicationExpert1",
    "ruleName": "7-time_steps",
    "naturalLanguage": " When time becomes  18:25 minutes and  When  Marco daily footsteps is    less then  5000  ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "18:25",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "less",
        "parent": "physiological",
        "triggerType": "condition",
        "value": "5000",
        "element": {
          "realName": "steps",
          "displayedName": "Steps",
          "englishDisplayedName": "Steps",
          "xPath": "user/physiological/@steps",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Go outside to have a walk"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1170467921,
    "author": "applicationExpert1",
    "ruleName": "6-time_inside_bathroom",
    "naturalLanguage": "When time inside bathroom becomes  more then  2 minutes ,  do send  one  alarm  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "more",
        "parent": "timeInsideARoom",
        "triggerType": "event",
        "value": "2",
        "element": {
          "realName": "timeInsideBathroom",
          "displayedName": "Time Inside Bathroom",
          "englishDisplayedName": "Time Inside Bathroom",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Marco is in the bathroom for more than 1 hour"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1513466231,
    "author": "applicationExpert1",
    "ruleName": "4-inside_bedroom",
    "naturalLanguage": "When  Marco   is  inside  bedroom ,  do start relaxing light scene in the bedroom",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "BEDROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Bedroom",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1933171152,
    "author": "applicationExpert1",
    "ruleName": "3-bedroom_motion_night",
    "naturalLanguage": " When  Bedroom motion becomes  active    and  When time  is between 17:55 AND 18:00  ,  do  turn on the   Light Strip Corridor and set color to Electric green for 2 minutes",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "between",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "17:55",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "18:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Light Strip",
          "realName": "Light Strip Corridor",
          "description": "Light Strip Corridor",
          "xPath": "applianceState/Corridor/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "Corridor",
        "type": "update:lightColor",
        "value": "#00ff00",
        "duration": "2"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 84606861,
    "author": "applicationExpert1",
    "ruleName": "1-reminder_by_notification",
    "naturalLanguage": "When time becomes  17:52 minutes ,  do send  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "17:52",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Remember to take the aspirine"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 119713179,
    "author": "applicationExpert1",
    "ruleName": "vocal-emotional-state",
    "naturalLanguage": "When  Test-user vocal emotional state becomes  happy  ,  do  turn on the   Living Room Light and set color to Bright green",
    "priority": 0,
    "goal": "",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "HAPPY",
        "element": {
          "realName": "vocalEmotionalState",
          "displayedName": "Vocal Emotional State",
          "englishDisplayedName": "Vocal Emotional State",
          "xPath": "user/cognitive/@vocalEmotionalState",
          "type": "ENUM",
          "possibleValues": {
            "BORED": "Bored",
            "HAPPY": "Happy",
            "AMUSED": "Amused",
            "WORRIED": "Worried",
            "SAD": "Sad",
            "SERENE": "Serene",
            "ANGRY": "Angry",
            "ENTHUSIAST": "Enthusiast"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Living Room",
          "realName": "Hue color light Living Room",
          "description": "Living Room Light",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "LivingRoom",
        "type": "update:lightColor",
        "value": "#5ff320",
        "duration": "0"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "04-06-2020 12:22:01",
    "external": false
  },
  {
    "id": 1739114914,
    "author": "domainExpert6",
    "ruleName": "Test Daniele ManDown",
    "naturalLanguage": "se Test-user1 è sdraiato, inviare l'allarme con sms a 33312312312",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "physical",
        "triggerType": "condition",
        "value": "true",
        "element": {
          "realName": "layingDown",
          "type": "BOOLEAN",
          "xPath": "user/physical/@layingDown"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Allarme man down LD"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "3484527832"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 936824373,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Glas Wasser trinken um 22 Uhr",
    "naturalLanguage": "When time becomes  22:00 minutes ,  do send  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnerung: Glas Wasser trinken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1968211442,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Glas Wasser trinken um 16 Uhr",
    "naturalLanguage": "When time becomes  16:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "16:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnenrung: Glas Wasser trinken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 763004522,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Glas Wasser trinken (11 Uhr)",
    "naturalLanguage": "When time becomes  11:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "11:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnerung: Glas Wasser trinken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1272561656,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Augentropfen und Therapie um 9 Uhr",
    "naturalLanguage": "When time becomes  09:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "09:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnerung: Augentropfen und Therapie"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1249863632,
    "author": "domainExpert7",
    "ruleName": "Greatlampe einschalten, falls es Person nach 9:30 im Wohnzimmer ist.",
    "naturalLanguage": "When Test-user   is  inside  livingroom and time is  more then  09:30 minutes ,  do  turn on  the great luminare light",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "LIVINGROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "more",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "09:30",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "GREAT Luminare",
          "realName": "GREATLuminare",
          "description": "GREAT Luminare Light",
          "xPath": "applianceState/LivingRoom/greatLuminare",
          "type": "custom:greatLuminare"
        },
        "operator": "turnOn",
        "parent": "LivingRoom",
        "type": "custom:greatLuminare",
        "values": []
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 997266552,
    "author": "domainExpert7",
    "ruleName": "Great-Relaxlicht um 22 Uhr, falls Testperson im Wohnzimmer ist",
    "naturalLanguage": "When  Test-user   is  inside  livingroom and time becomes  more then  22:00 minutes ,  do start relaxing light scene in the living room",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "LIVINGROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "more",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1111596202,
    "author": "domainExpert7",
    "ruleName": "Erinnerungen Trainingsuebungen auf dem Tablet",
    "naturalLanguage": "if  Test-user last connection time is  more then  48  ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "more",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "48",
        "element": {
          "realName": "lastConnectionTime",
          "displayedName": "Last Connection",
          "englishDisplayedName": "Last Connection",
          "xPath": "user/cognitive/@lastConnectionTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Bitte Uebungen auf dem Tablet machen"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1909868168,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Glas Wasser trinken um 22 Uhr",
    "naturalLanguage": "When time becomes  22:00 minutes ,  do send  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnerung: Glas Wasser trinken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 287394626,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Glas Wasser trinken um 16 Uhr",
    "naturalLanguage": "When time becomes  16:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "16:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnenrung: Glas Wasser trinken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 148808064,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Glas Wasser trinken (11 Uhr)",
    "naturalLanguage": "When time becomes  11:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "11:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnerung: Glas Wasser trinken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 926400819,
    "author": "domainExpert7",
    "ruleName": "Erinnerung: Augentropfen und Therapie um 9 Uhr",
    "naturalLanguage": "When time becomes  09:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "09:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Erinnerung: Augentropfen und Therapie"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1878396368,
    "author": "domainExpert7",
    "ruleName": "Great-Relaxlicht um 22 Uhr, falls Testperson im Wohnzimmer ist",
    "naturalLanguage": "When  Test-user   is  inside  livingroom and time becomes  more then  22:00 minutes ,  do start relaxing light scene in the living room",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "LIVINGROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "more",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 307847951,
    "author": "domainExpert7",
    "ruleName": "Erinnerungen Trainingsuebungen auf dem Tablet",
    "naturalLanguageOriginal": "Wenn die letzte Verbindungszeit des Testbenutzers 48 ist, senden Sie eine Erinnerung per Benachrichtigung",
    "naturalLanguage": "When the test user's last connected time become 48, send a reminder via notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "48",
        "element": {
          "realName": "lastConnectionTime",
          "displayedName": "Last Connection",
          "englishDisplayedName": "Last Connection",
          "xPath": "user/cognitive/@lastConnectionTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Bitte Uebungen auf dem Tablet machen"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 460199470,
    "author": "domainExpert7",
    "ruleName": "Great an bei wenig Licht",
    "naturalLanguage": "Die LivingRoom-Bewegung wird aktiv und die LivingRoom-LichtstÃƒÆ’Ã‚Â¤rke ist sehr schwach. Schalten Sie das groÃƒÆ’Ã…Â¸artige Licht ein",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 3,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "livingRoom",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "true",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 3,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "livingRoom",
        "triggerType": "condition",
        "value": "VERY_LOW_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "GREAT Luminare",
          "realName": "GREATLuminare",
          "description": "GREAT Luminare Light",
          "xPath": "applianceState/LivingRoom/greatLuminare",
          "type": "custom:greatLuminare"
        },
        "operator": "turnOn",
        "parent": "LivingRoom",
        "type": "custom:greatLuminare",
        "values": []
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1579672307,
    "author": "domainExpert7",
    "ruleName": "Unterstuetzung zum Aufwachen: aktivierendes Licht im Wohnzimmer",
    "naturalLanguage": "Wenn die Schlafzimmerbewegung zwischen 08:30 und 09:30 Uhr nicht aktiv ist, schalten Sie das Wohnzimmerlicht fÃƒÆ’Ã‚Â¼r 15 Minuten ein",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": -1,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          "08:30",
          "09:30"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Living Room",
          "realName": "Hue color light Living Room",
          "description": "Living Room Light",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "LivingRoom",
        "type": "update:lightColor",
        "value": "#ffffff",
        "duration": "15"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 232201151,
    "author": "applicationExpert2",
    "ruleName": "Start activating light in bedroom",
    "naturalLanguage": "If  Bedroom motion becomes  not  active     between 08:30 and 10:00 ,  do start activating light scene in the bedroom",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": -1,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          "08:30",
          "10:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "description": "Start Activating Light Scene in the Bedroom",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Activate"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 143122028,
    "author": "applicationExpert2",
    "ruleName": "Warn user about rain in tomorrow forecasts",
    "naturalLanguage": "When  Weather-time becomes rain    ,  do send  one  alarm  by sms to 12345678",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "twentyFourHoursWeatherForecast",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "rain",
          "displayedName": "Rain",
          "englishDisplayedName": "Rain",
          "xPath": "environment/twentyFourHoursWeatherForecast/@rain",
          "type": "BOOLEAN",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "tomorrow is likely to rain"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "12345678"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 728738884,
    "author": "applicationExpert2",
    "ruleName": "Remind to walk more",
    "naturalLanguage": "When  Test-user daily footsteps becomes  less then  6000  ,  do send  reminder  by sms to 12345678",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "physiological",
        "triggerType": "event",
        "value": "6000",
        "element": {
          "realName": "steps",
          "displayedName": "Steps",
          "englishDisplayedName": "Steps",
          "xPath": "user/physiological/@steps",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Remind to walk more for a healthier lifestyle"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "12345678"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 506862500,
    "author": "applicationExpert2",
    "ruleName": "Activate relaxing light on late evening",
    "naturalLanguage": " Test-user   is  inside  livingroom and time becomes  22:00 minutes ,  do start relaxing light scene in the living room",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "condition",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "condition",
        "value": "LIVINGROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 730456382,
    "author": "applicationExpert2",
    "ruleName": "Too much time in bathroom",
    "naturalLanguage": "When time inside bathroom becomes  more then  30 minutes ,  do send  one  alarm  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "more",
        "parent": "timeInsideARoom",
        "triggerType": "event",
        "value": "30",
        "element": {
          "realName": "timeInsideBathroom",
          "displayedName": "Time Inside Bathroom",
          "englishDisplayedName": "Time Inside Bathroom",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Marco is in the bathroom for more than 1 hour"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 499855005,
    "author": "applicationExpert2",
    "ruleName": "Start biorhythm light when no light in bedroom",
    "naturalLanguage": "When  Bedroom light level becomes  no light  ,  do start biorhythm light scene in the bedroom",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "NO_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "description": "Start Biorhythm Light Scene in the Bedroom",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "BiorhythmLight"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1089495978,
    "author": "applicationExpert2",
    "ruleName": "walk more!",
    "naturalLanguage": "When  Test-user daily footsteps becomes  less then  6000  ,  do send  reminder  by sms to 12345678",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "physiological",
        "triggerType": "event",
        "value": "6000",
        "element": {
          "realName": "steps",
          "displayedName": "Steps",
          "englishDisplayedName": "Steps",
          "xPath": "user/physiological/@steps",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Remind to walk more for a healthier lifestyle"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "12345678"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "04-03-2020 16:30:22",
    "external": false
  },
  {
    "id": 245210718,
    "author": "domainExpert8",
    "ruleName": "Licht an im Bad in der Nacht",
    "naturalLanguage": " When  Bedroom motion becomes  active    and  When time is    gt 22:00 minutes AND  When time is    lt 23:59 minutes and  When time is  02:30 minutes and  When time is  06:00 minutes ,  do  turn on the  Bathroom Light for 5 minutes",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "gt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "23:59",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "02:30",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "06:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Hue color light Bathroom",
          "xPath": "applianceState/Bathroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "Bathroom",
        "type": "update:lightColor",
        "value": "#ffffff",
        "duration": "5"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 28492400,
    "author": "domainExpert8",
    "ruleName": "1-reminder_by_notification",
    "naturalLanguage": "When time becomes  08:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "08:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Bitte Blutzucker messen"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1954746659,
    "author": "domainExpert8",
    "ruleName": "1-reminder_by_notification",
    "naturalLanguage": "When time becomes  08:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "08:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Bitte Blutzucker messen"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1860576298,
    "author": "domainExpert9",
    "ruleName": "Emotional status discouraged",
    "naturalLanguage": "if  Test-user emotional state is  discouraged  ,  do send  one  alarm  by notification",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "DISCOURAGED",
        "element": {
          "realName": "emotionalState",
          "displayedName": "Kwido Emotional State",
          "englishDisplayedName": "Kwido Emotional State",
          "xPath": "user/cognitive/@emotionalState",
          "type": "ENUM",
          "possibleValues": {
            "DISCOURAGED": "Discouraged",
            "HAPPY": "Happy",
            "SAD": "Sad",
            "PLEASED": "Pleased",
            "SATISFIED": "Satisfied"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Emotional status discouraged"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 723194353,
    "author": "domainExpert9",
    "ruleName": "Cognitive mild level email",
    "naturalLanguage": "if  Test-user cognitive state is  mild cognitive impairment  ,  do send  one  alarm  by mail to domainExpert9",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "MILD_COGNITIVE_IMPAIRMENT",
        "element": {
          "realName": "cognitiveState",
          "displayedName": "Cognitive State",
          "englishDisplayedName": "Cognitive State",
          "xPath": "user/cognitive/@cognitiveState",
          "type": "ENUM",
          "possibleValues": {
            "EXPERT": "Expert",
            "MILD_COGNITIVE_IMPAIRMENT": "Mild Cognitive Impairment",
            "MODERATE_COGNITIVE_IMPAIRMENT": "Moderate Cognitive Impairment",
            "MEMORY_LOSSES_ASSOCIATED_WITH_AGE": "Memory Losses Associated with Age"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Mild cognitive status"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "domainExpert9"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1458507200,
    "author": "domainExpert9",
    "ruleName": "Emotional State becomes Sad - Activating light",
    "naturalLanguage": "When  Test-user emotional state becomes  sad  ,  do start activating light scene in the living room",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "SAD",
        "element": {
          "realName": "emotionalState",
          "displayedName": "Kwido Emotional State",
          "englishDisplayedName": "Kwido Emotional State",
          "xPath": "user/cognitive/@emotionalState",
          "type": "ENUM",
          "possibleValues": {
            "DISCOURAGED": "Discouraged",
            "HAPPY": "Happy",
            "SAD": "Sad",
            "PLEASED": "Pleased",
            "SATISFIED": "Satisfied"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "description": "Start Activating Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Activate"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1476088173,
    "author": "domainExpert9",
    "ruleName": "Reminder to play",
    "naturalLanguage": "if  Test-user last connection time is    more then  48  ,  do send  one  alarm  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "more",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "48",
        "element": {
          "realName": "lastConnectionTime",
          "displayedName": "Last Connection",
          "englishDisplayedName": "Last Connection",
          "xPath": "user/cognitive/@lastConnectionTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Your last connection was more than 48 hours ago. Lets play!"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 210155031,
    "author": "domainExpert9",
    "ruleName": "aspirine_taken",
    "naturalLanguage": "if aspirine has been taken   ,  do send  one  reminder  by mail to domainExpert9@email.net",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "condition",
        "value": "aspirine",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Aspirine taken"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "domainExpert9@email.net"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 721225114,
    "author": "domainExpert9",
    "ruleName": "Emotional status discouraged",
    "naturalLanguage": "if  Test-user emotional state is  discouraged  ,  do send  one  alarm  by notification",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "DISCOURAGED",
        "element": {
          "realName": "emotionalState",
          "displayedName": "Kwido Emotional State",
          "englishDisplayedName": "Kwido Emotional State",
          "xPath": "user/cognitive/@emotionalState",
          "type": "ENUM",
          "possibleValues": {
            "DISCOURAGED": "Discouraged",
            "HAPPY": "Happy",
            "SAD": "Sad",
            "PLEASED": "Pleased",
            "SATISFIED": "Satisfied"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Emotional status discouraged"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1299316102,
    "author": "domainExpert9",
    "ruleName": "Cognitive mild level email",
    "naturalLanguage": "if  Test-user cognitive state is  mild cognitive impairment  ,  do send  one  alarm  by mail to domainExpert9",
    "priority": 1,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "MILD_COGNITIVE_IMPAIRMENT",
        "element": {
          "realName": "cognitiveState",
          "displayedName": "Cognitive State",
          "englishDisplayedName": "Cognitive State",
          "xPath": "user/cognitive/@cognitiveState",
          "type": "ENUM",
          "possibleValues": {
            "EXPERT": "Expert",
            "MILD_COGNITIVE_IMPAIRMENT": "Mild Cognitive Impairment",
            "MODERATE_COGNITIVE_IMPAIRMENT": "Moderate Cognitive Impairment",
            "MEMORY_LOSSES_ASSOCIATED_WITH_AGE": "Memory Losses Associated with Age"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Mild cognitive status"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "domainExpert9"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1415350453,
    "author": "domainExpert9",
    "ruleName": "Emotional State becomes Sad - Activating light",
    "naturalLanguage": "When  Test-user emotional state becomes  sad  ,  do start activating light scene in the living room",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "SAD",
        "element": {
          "realName": "emotionalState",
          "displayedName": "Kwido Emotional State",
          "englishDisplayedName": "Kwido Emotional State",
          "xPath": "user/cognitive/@emotionalState",
          "type": "ENUM",
          "possibleValues": {
            "DISCOURAGED": "Discouraged",
            "HAPPY": "Happy",
            "SAD": "Sad",
            "PLEASED": "Pleased",
            "SATISFIED": "Satisfied"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "description": "Start Activating Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Activate"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1842592295,
    "author": "domainExpert9",
    "ruleName": "Reminder to play",
    "naturalLanguage": "if  Test-user last connection time is    more then  48  ,  do send  one  alarm  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "more",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "48",
        "element": {
          "realName": "lastConnectionTime",
          "displayedName": "Last Connection",
          "englishDisplayedName": "Last Connection",
          "xPath": "user/cognitive/@lastConnectionTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Your last connection was more than 48 hours ago. Lets play!"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1290908745,
    "author": "domainExpert9",
    "ruleName": "Alexa turn on living room with scene relaxing",
    "naturalLanguage": "When  Test-user vocal string becomes  turn on light in living room scene relaxing  ,  do start relaxing light scene in the living room",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "vocalInput",
        "triggerType": "event",
        "value": "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_RELAXING",
        "element": {
          "realName": "vocalString",
          "displayedName": "Vocal Sentence",
          "englishDisplayedName": "Vocal Sentence",
          "xPath": "user/vocalInput/@vocalString",
          "type": "ENUM",
          "possibleValues": {
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_ACTIVATING": "Turn-On Corridor Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_WHITE": "Turn-On Entrance Light with White Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_WHITE": "Turn-On Livingroom Light with White Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_WHITE": "Turn-On Kitchen Light with White Color",
            "TURN_OFF_LIGHT_IN_BEDROOM": "Turn-Off Bedroom Light",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_ACTIVATING": "Turn-On Kitchen Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_RED": "Turn-On Entrance Light with White Red",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_GREEN": "Turn-On Bathroom Light with White Color",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_BIORHYTHM": "Turn-On Entrance Light with Activating Scene",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_YELLOW": "Turn-On Bedroom Light with Yellow Color",
            "TURN_OFF_LIGHT_IN_ENTRANCE": "Turn-Off Entrance Light",
            "TURN_ON_LIGHT_IN_LIVING_ROOM": "Turn-On Livingroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_RED": "Turn-On Bedroom Light with White Red",
            "TURN_OFF_LIGHT_IN_CORRIDOR": "Turn-Off Corridor Light",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_RELAXING": "Turn-On Entrance Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_BIORHYTHM": "Turn-On Bathroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_YELLOW": "Turn-On Entrance Light with Yellow Color",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_BLUE": "Turn-On Bedroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_BIORHYTHM": "Turn-On Kitchen Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_BIORHYTHM": "Turn-On Bedroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_WHITE": "Turn-On Bathroom Light with White Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_BLUE": "Turn-On Kitchen Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_ACTIVATING": "Turn-On Bathroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_RELAXING": "Turn-On Kitchen Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_GREEN": "Turn-On Kitchen Light with Green Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_BIORHYTHM": "Turn-On Corridor Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_ACTIVATING": "Turn-On Livingroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_GREEN": "Turn-On Entrance Light with Green Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_YELLOW": "Turn-On Livingroom Light with Yellow Color",
            "TURN_OFF_LIGHT_IN_BATHROOM": "Turn-Off Bathroom Light",
            "TURN_ON_LIGHT_IN_ENTRANCE": "Turn-On Entrance Light",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_YELLOW": "Turn-On Kitchen Light with Yellow Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_YELLOW": "Turn-On Corridor Light with Yellow Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_BLUE": "Turn-On Livingroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_GREEN": "Turn-On Livingroom Light with Green Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_RELAXING": "Turn-On Livingroom Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_ACTIVATING": "Turn-On Entrance Light with Activating Scene",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_BIORHYTHM": "Turn-On Livingroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_BLUE": "Turn-On Bathroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM": "Turn-On Bathroom Light",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_GREEN": "Turn-On Corridor Light with Green Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_RED": "Turn-On Kitchen Light with Yellow Red",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_BLUE": "Turn-On Entrance Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_RELAXING": "Turn-On Bathroom Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_RED": "Turn-On Corridor Light with Yellow Red",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_RED": "Turn-On Bathroom Light with Red Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_WHITE": "Turn-On Corridor Light with Yellow White",
            "TURN_ON_LIGHT_IN_CORRIDOR": "Turn-On Corridor Light",
            "TURN_ON_LIGHT_IN_BEDROOM": "Turn-On Bedroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_ACTIVATING": "Turn-On Bedroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_BLUE": "Turn-On Corridor Light with Yellow Blue",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_YELLOW": "Turn-On Bathroom Light with Yellow Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_RELAXING": "Turn-On Corridor Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_KITCHEN": "Turn-On Kitchen Light",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_RED": "Turn-On Livingroom Light with Red Color",
            "TURN_OFF_LIGHT_IN_LIVING_ROOM": "Turn-Off Livingroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_GREEN": "Turn-On Bedroom Light with Green Color",
            "TURN_OFF_LIGHT_IN_KITCHEN": "Turn-Off Kitchen Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_WHITE": "Turn-On Bedroom Light with White Color",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_RELAXING": "Turn-On Bedroom Light with Relaxing Scene"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "lastModified": "11-02-2020 15:43:10",
    "external": false
  },
  {
    "id": 784470700,
    "author": "applicationExpert3",
    "ruleName": "rain tomorrow",
    "naturalLanguage": "if  Weather-time is rain    ,  do send  reminder  by mail to applicationExpert3@provider.it",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "twentyFourHoursWeatherForecast",
        "triggerType": "condition",
        "value": "true",
        "element": {
          "realName": "rain",
          "displayedName": "Rain",
          "englishDisplayedName": "Rain",
          "xPath": "environment/twentyFourHoursWeatherForecast/@rain",
          "type": "BOOLEAN",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Domani piove"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "applicationExpert3@provider.it"
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 713862806,
    "author": "applicationExpert3",
    "ruleName": "sleep & audio",
    "naturalLanguage": "When  Test-user sleep duration becomes  less then  60  ,  do send  one  alarm  by voice",
    "priority": 0,
    "goal": "wellbeing",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "sleep",
        "triggerType": "event",
        "value": "60",
        "element": {
          "realName": "sleepDuration",
          "displayedName": "Sleep Duration",
          "englishDisplayedName": "Sleep Duration",
          "xPath": "user/activity/sleep/@sleepDuration",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "dormi poco"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "24-07-2020 11:52:04",
    "external": false
  },
  {
    "id": 1718829999,
    "author": "applicationExpert4",
    "ruleName": "gas or smoke detected - alarm",
    "naturalLanguage": "When  Kitchen gas sensor becomes  active    or  Kitchen smoke sensor becomes  active    ,  do send  one  alarm  by sms to caregiver",
    "priority": 10,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 4,
        "nextOperator": "or",
        "operator": "equal",
        "parent": "kitchen",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "gasSensor",
          "displayedName": "Gas Sensor",
          "englishDisplayedName": "Gas Sensor",
          "xPath": "environment/@gasSensor",
          "type": "BOOLEAN",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 4,
        "operator": "equal",
        "parent": "kitchen",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "smokeSensor",
          "displayedName": "Smoke Sensor",
          "englishDisplayedName": "Smoke Sensor",
          "xPath": "environment/@smokeSensor",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "gas or smoke detected in the kitchen!"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "caregiver"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 15:16:46",
    "external": false
  },
  {
    "id": 1788513126,
    "author": "applicationExpert4",
    "ruleName": "reminder to train more",
    "naturalLanguage": "When  Test-user last connection becomes  more then  48  or  Test-user training time becomes  less then  15  ,  do send  one  reminder  by sms to elderly",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "or",
        "operator": "more",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "48",
        "element": {
          "realName": "lastConnectionTime",
          "displayedName": "Last Connection",
          "englishDisplayedName": "Last Connection",
          "xPath": "user/cognitive/@lastConnectionTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "15",
        "element": {
          "realName": "trainingTime",
          "displayedName": "Training Time",
          "englishDisplayedName": "Training Time",
          "xPath": "user/cognitive/@trainingTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "remember to train more"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "elderly"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 15:44:43",
    "external": false
  },
  {
    "id": 1546471114,
    "author": "applicationExpert4",
    "ruleName": "activate bio light",
    "naturalLanguage": "if  Test-user   is  inside  house and  LivingRoom light level is  low light  ,  do start biorhythm light scene in the living room",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "HOUSE",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 3,
        "operator": "equal",
        "parent": "livingRoom",
        "triggerType": "condition",
        "value": "LOW_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "description": "Start Biorhythm Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "BiorhythmLight"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 15:36:58",
    "external": false
  },
  {
    "id": 1649551250,
    "author": "applicationExpert4",
    "ruleName": "go to bed relaxing light",
    "naturalLanguage": "if time  is between 21:00 AND 23:00  ,  do start relaxing light scene in the living room",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "gt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "21:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "23:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 15:34:18",
    "external": false
  },
  {
    "id": 1266656161,
    "author": "applicationExpert4",
    "ruleName": "Elderly is sad - reminder caregiver to call ",
    "naturalLanguage": "When  Test-user kwido emotional state becomes  sad  ,  do send  one  reminder  by sms to caregiver",
    "priority": 0,
    "goal": "wellbeing",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "SAD",
        "element": {
          "realName": "emotionalState",
          "displayedName": "Kwido Emotional State",
          "englishDisplayedName": "Kwido Emotional State",
          "xPath": "user/cognitive/@emotionalState",
          "type": "ENUM",
          "possibleValues": {
            "DISCOURAGED": "Discouraged",
            "HAPPY": "Happy",
            "SAD": "Sad",
            "PLEASED": "Pleased",
            "SATISFIED": "Satisfied"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Elderly is sad: call her/him"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "caregiver"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 16:12:12",
    "external": false
  },
  {
    "id": 741066011,
    "author": "applicationExpert4",
    "ruleName": "turn off lights in bedroom between 23 and 06",
    "naturalLanguage": "if  Test-user   is  inside  bedroom and time  is between 23:00 AND 06:00  ,  do  turn off all lights in the bedroom",
    "priority": 0,
    "goal": "wellbeing",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "BEDROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "gt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "23:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "06:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "description": "All Lights in the bedroom",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "parent": "Bedroom",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 16:09:45",
    "external": false
  },
  {
    "id": 464375429,
    "author": "applicationExpert4",
    "ruleName": "Charge devices",
    "naturalLanguage": "When time becomes  21:00 minutes ,  do send  one  reminder  by notification",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "21:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Remember to charge your smart devices"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 16:37:13",
    "external": false
  },
  {
    "id": 1326270866,
    "author": "applicationExpert4",
    "ruleName": "Elderly exits home - all lights off",
    "naturalLanguage": "When  Test-user   is  outside house ,  do  turn off all lights in the house",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "OUTSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "HOUSE",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "description": "All Lights in the house",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "parent": "all",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 16:33:51",
    "external": false
  },
  {
    "id": 355157170,
    "author": "applicationExpert4",
    "ruleName": "Elderly arrives home - entrance light on",
    "naturalLanguage": "When  Test-user   is  inside  house ,  do  turn on the  Entrance Light",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "HOUSE",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Entrance",
          "realName": "Hue color light Entrance",
          "description": "Entrance Light",
          "xPath": "applianceState/Entrance/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "Entrance",
        "type": "update:lightColor",
        "value": "#fffafa",
        "duration": "0"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 16:31:32",
    "external": false
  },
  {
    "id": 448888480,
    "author": "applicationExpert4",
    "ruleName": "Elderly in living room - light on",
    "naturalLanguage": "if  Test-user   is  inside  livingroom and  LivingRoom light level is  low light  ,  do  turn on the  Living Room Light",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "LIVINGROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 3,
        "operator": "equal",
        "parent": "livingRoom",
        "triggerType": "condition",
        "value": "LOW_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Living Room",
          "realName": "Hue color light Living Room",
          "description": "Living Room Light",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "LivingRoom",
        "type": "update:lightColor",
        "value": "#fffafa",
        "duration": "0"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "10-02-2020 16:23:36",
    "external": false
  },
  {
    "id": 1983707087,
    "author": "applicationExpert4",
    "ruleName": "Fall in bathroom at night - alarm",
    "naturalLanguage": " WHEN  time inside bathroom becomes  20 minutes and time  is between 22:00 AND 07:00  ,  do send  one  alarm  by sms to caregiver",
    "priority": 5,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "timeInsideARoom",
        "triggerType": "event",
        "value": "20",
        "element": {
          "realName": "timeInsideBathroom",
          "displayedName": "Time Inside Bathroom",
          "englishDisplayedName": "Time Inside Bathroom",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "gt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "07:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "The elder has been in the bathroom for 20 minutes, he may have fallen"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "caregiver"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "09-06-2020 18:42:48",
    "external": false
  },
  {
    "id": 850861311,
    "author": "applicationExpert4",
    "ruleName": "Elderly exits kitchen - light off",
    "naturalLanguage": " WHEN   Test-user   is  outside kitchen and  Kitchen Light state is  on  ,  do  turn off the  Kitchen Light colored",
    "priority": 1,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "OUTSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "KITCHEN",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "technology",
        "dimensionId": 10,
        "operator": "equal",
        "parent": "kitchenLight",
        "triggerType": "condition",
        "value": "ON",
        "element": {
          "realName": "state",
          "displayedName": "State",
          "englishDisplayedName": "State",
          "xPath": "technology/light/@state",
          "type": "ENUM",
          "possibleValues": {
            "OFF": "Off",
            "ON": "On"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Kitchen",
          "realName": "Hue color light Kitchen",
          "description": "Kitchen Light",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOff",
        "parent": "Kitchen",
        "type": "update:lightColor",
        "value": "#fffafa",
        "duration": "0"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "09-06-2020 18:49:05",
    "external": false
  },
  {
    "id": 2117586770,
    "author": "applicationExpert4",
    "ruleName": "more than 72 hours from last Kwido connection - email to caregiver",
    "naturalLanguage": "When  Test-user last connection becomes  72  ,  do send  one  alarm  by mail to caregiver@email.com",
    "priority": 0,
    "goal": "wellbeing",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "72",
        "element": {
          "realName": "lastConnectionTime",
          "displayedName": "Last Connection",
          "englishDisplayedName": "Last Connection",
          "xPath": "user/cognitive/@lastConnectionTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "More than 72 hours since the last connection to the Kwido application"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "caregiver@email.com"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "09-06-2020 18:54:08",
    "external": false
  },
  {
    "id": 1480635719,
    "author": "applicationExpert4",
    "ruleName": "get up - activating light",
    "naturalLanguage": "if  Bedroom motion is  not  active     between 07:00 and 08:00 ,  do start activating light scene in the bedroom",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "condition",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "07:00",
          "08:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "description": "Start Activating Light Scene in the Bedroom",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Activate"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "09-06-2020 19:02:07",
    "external": false
  },
  {
    "id": 1503966898,
    "author": "applicationExpert4",
    "ruleName": "good weather tomorrow - walk notification",
    "naturalLanguage": " WHEN  time becomes  18:00 minutes and  Weather & Time outdoor condition is  clear sky  and  Weather & Time outdoor temperature is  more then  20  ,  do send  one  reminder  by notification",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "18:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "twentyFourHoursWeatherForecast",
        "triggerType": "condition",
        "value": "CLEAR_SKY",
        "element": {
          "realName": "outdoorCondition",
          "displayedName": "Outdoor Condition",
          "englishDisplayedName": "Outdoor Condition",
          "xPath": "environment/twentyFourHoursWeatherForecast/@outdoorCondition",
          "type": "ENUM",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "more",
        "parent": "twentyFourHoursWeatherForecast",
        "triggerType": "condition",
        "value": "20",
        "element": {
          "realName": "outdoorTemperature",
          "displayedName": "Outdoor Temperature",
          "englishDisplayedName": "Outdoor Temperature",
          "xPath": "environment/twentyFourHoursWeatherForecast/@outdoorTemperature",
          "type": "DOUBLE",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Tomorrow the weather will be excellent: remember to go out for a walk!"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "09-06-2020 19:29:05",
    "external": false
  },
  {
    "id": 80470413,
    "author": "applicationExpert4",
    "ruleName": "Elderly enters kitchen in dark - light on",
    "naturalLanguage": " WHEN   Test-user   is  inside  kitchen and  Kitchen light level is  low light  ,  do  turn on the  Kitchen Light",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "KITCHEN",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 4,
        "operator": "equal",
        "parent": "kitchen",
        "triggerType": "condition",
        "value": "LOW_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Kitchen",
          "realName": "Hue color light Kitchen",
          "description": "Kitchen Light",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "Kitchen",
        "type": "update:lightColor",
        "value": "#fffafa",
        "duration": "0"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 09:33:55",
    "external": false
  },
  {
    "id": 471448302,
    "author": "applicationExpert4",
    "ruleName": "light in kitchen at 18:30",
    "naturalLanguage": " WHEN  time becomes  18:30 minutes and  Test-user   is  inside  kitchen and  Kitchen light level is  dark  ,  do  turn on the  Kitchen Light",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "18:30",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "KITCHEN",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 4,
        "operator": "equal",
        "parent": "kitchen",
        "triggerType": "condition",
        "value": "DARK",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Kitchen",
          "realName": "Hue color light Kitchen",
          "description": "Kitchen Light",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "Kitchen",
        "type": "update:lightColor",
        "value": "#fffafa",
        "duration": "0"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 09:42:51",
    "external": false
  },
  {
    "id": 1059760973,
    "author": "applicationExpert4",
    "ruleName": "remember appointment",
    "naturalLanguage": " WHEN  time becomes  09:00 minutes and  Weather & Time date is  12-06-2020  ,  do send  one  reminder  by notification, send  one  reminder  by sms to caregiver",
    "priority": 0,
    "goal": "comfort",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "09:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "12-06-2020",
        "element": {
          "realName": "localDate",
          "displayedName": "Date",
          "englishDisplayedName": "Date",
          "xPath": "environment/dateTime/@localDate",
          "type": "DATE",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "remember to go to the appointment!"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "the Elder has an appointment"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "caregiver"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 09:50:25",
    "external": false
  },
  {
    "id": 45466234,
    "author": "applicationExpert4",
    "ruleName": "sad - start relaxing scene in living room",
    "naturalLanguage": "When  Test-user kwido emotional state becomes  sad  ,  do start relaxing light scene in the living room",
    "priority": 0,
    "goal": "wellbeing",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "SAD",
        "element": {
          "realName": "emotionalState",
          "displayedName": "Kwido Emotional State",
          "englishDisplayedName": "Kwido Emotional State",
          "xPath": "user/cognitive/@emotionalState",
          "type": "ENUM",
          "possibleValues": {
            "DISCOURAGED": "Discouraged",
            "HAPPY": "Happy",
            "SAD": "Sad",
            "PLEASED": "Pleased",
            "SATISFIED": "Satisfied"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:13:13",
    "external": false
  },
  {
    "id": 1623028136,
    "author": "applicationExpert4",
    "ruleName": "Remember medicine",
    "naturalLanguage": "When time becomes  09:00 minutes ,  do send  one  reminder  by notification",
    "priority": 1,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "09:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "remember to take the medicine"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:20:15",
    "external": false
  },
  {
    "id": 1831712457,
    "author": "applicationExpert4",
    "ruleName": "heart 100 - bedroom relaxing light",
    "naturalLanguage": " WHEN   Test-user heart rate becomes  100  and  Test-user   is  inside  bedroom ,  do start relaxing light scene in the bedroom",
    "priority": 3,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "physiological",
        "triggerType": "event",
        "value": "100",
        "element": {
          "realName": "heartRate",
          "displayedName": "Heart Rate",
          "englishDisplayedName": "Heart Rate",
          "xPath": "user/physiological/@heartRate",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "BEDROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Bedroom",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:23:53",
    "external": false
  },
  {
    "id": 2014942980,
    "author": "applicationExpert4",
    "ruleName": "heart rate 130 - SMS alert to caregiver",
    "naturalLanguage": "When  Test-user heart rate becomes  130  ,  do send  one  alarm  by sms to caregiver",
    "priority": 5,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "physiological",
        "triggerType": "event",
        "value": "130",
        "element": {
          "realName": "heartRate",
          "displayedName": "Heart Rate",
          "englishDisplayedName": "Heart Rate",
          "xPath": "user/physiological/@heartRate",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Elderly heart rate is 130"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "caregiver"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:30:48",
    "external": false
  },
  {
    "id": 1388005434,
    "author": "applicationExpert4",
    "ruleName": "elderly out at 20 - alarm",
    "naturalLanguage": " WHEN  time becomes  20:00 minutes and  Test-user   is  outside house ,  do send  one  alarm  by sms to caregiver",
    "priority": 3,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "20:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "OUTSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "HOUSE",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Elderly is outside house!"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "caregiver"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:35:01",
    "external": false
  },
  {
    "id": 1269287404,
    "author": "applicationExpert4",
    "ruleName": "guide to bathroom",
    "naturalLanguage": " WHEN   Bedroom motion becomes  active    and time  is between 00:00 AND 06:00  ,  do  turn on the  Light Strip Corridor for 5 minutes",
    "priority": 3,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "gt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "00:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "06:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Light Strip",
          "realName": "Light Strip Corridor",
          "description": "Light Strip Corridor",
          "xPath": "applianceState/Corridor/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "Corridor",
        "type": "update:lightColor",
        "value": "#fffafa",
        "duration": "5"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:42:28",
    "external": false
  },
  {
    "id": 1588154226,
    "author": "applicationExpert4",
    "ruleName": "reminder to move more",
    "naturalLanguage": " WHEN  time becomes  15:00 minutes and  Test-user daily footsteps is  less then  1000  ,  do send  one  reminder  by notification",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "15:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "less",
        "parent": "physiological",
        "triggerType": "condition",
        "value": "1000",
        "element": {
          "realName": "steps",
          "displayedName": "Steps",
          "englishDisplayedName": "Steps",
          "xPath": "user/physiological/@steps",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "you should move more!"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:50:59",
    "external": false
  },
  {
    "id": 334201783,
    "author": "applicationExpert4",
    "ruleName": "living room at 3pm - relaxing light",
    "naturalLanguage": " WHEN  time becomes  15:00 minutes and  Test-user   is  inside  livingroom ,  do start relaxing light scene in the living room",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "15:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "value": "LIVINGROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 10:56:23",
    "external": false
  },
  {
    "id": 537784833,
    "author": "applicationExpert4",
    "ruleName": "not progressing - encouragement",
    "naturalLanguage": "When  Test-user training result becomes  not progressing  ,  do send  one  reminder  by notification",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "NOT_PROGRESSING",
        "element": {
          "realName": "trainingResult",
          "displayedName": "Training Result",
          "englishDisplayedName": "Training Result",
          "xPath": "user/cognitive/@trainingResult",
          "type": "ENUM",
          "possibleValues": {
            "STUPENDOUSLY": "Stupendously",
            "WELL_MAINTAINED": "Well Maintained",
            "NOT_PROGRESSING": "Not Progressing",
            "NIMBLY": "Nimbly"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Keep trying, the results will improve!"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 11:43:17",
    "external": false
  },
  {
    "id": 1802140655,
    "author": "applicationExpert4",
    "ruleName": "good weather - go walk reminder",
    "naturalLanguage": " WHEN   Weather & Time outdoor condition becomes  clear sky  and time  is between 09:30 AND 11:00  ,  do send  one  reminder  by notification",
    "priority": 0,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "currentWeather",
        "triggerType": "event",
        "value": "CLEAR_SKY",
        "element": {
          "realName": "outdoorCondition",
          "displayedName": "Outdoor Condition",
          "englishDisplayedName": "Outdoor Condition",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "type": "ENUM",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "AND",
        "operator": "gt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "09:30",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "operator": "lt",
        "parent": "dateTime",
        "triggerType": "condition",
        "value": "11:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "weather is good, you should go out for a walk"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 11:56:47",
    "external": false
  },
  {
    "id": 24867418,
    "author": "applicationExpert4",
    "ruleName": "no motion in bed ",
    "naturalLanguage": "If  Bedroom motion becomes  not  active     between 06:00 and 10:00 ,  do send  one  alarm  by sms to caregiver",
    "priority": 3,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "true",
        "element": {
          "realName": "motion",
          "displayedName": "Motion",
          "englishDisplayedName": "Motion",
          "xPath": "environment/@motion",
          "type": "BOOLEAN",
          "value": "false",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "06:00",
          "10:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "no motion in bedroom"
          },
          {
            "description": "Notification Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "To",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "caregiver"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 12:24:08",
    "external": false
  },
  {
    "id": 1919962984,
    "author": "applicationExpert4",
    "ruleName": "medicine reminder",
    "naturalLanguage": "If medicine x has not been taken    between 08:00 and 10:00 ,  do send  reminder  by sms to Elderly",
    "priority": 3,
    "goal": "health",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "activity",
        "triggerType": "event",
        "value": "medicine x",
        "element": {
          "realName": "medicationName",
          "displayedName": "Medicine Taken",
          "englishDisplayedName": "Medicine Taken",
          "xPath": "user/activity/@medicationName",
          "type": "STRING",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          "08:00",
          "10:00"
        ]
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Remember to take the medicine"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Elderly"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 11:50:28",
    "external": false
  },
  {
    "id": 896802317,
    "author": "applicationExpert4",
    "ruleName": "training not progressing - email to caregiver",
    "naturalLanguage": "When  Test-user training result becomes  not progressing  ,  do send  one  reminder  by mail to caregiver@email.com",
    "priority": 0,
    "goal": "wellbeing",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "NOT_PROGRESSING",
        "element": {
          "realName": "trainingResult",
          "displayedName": "Training Result",
          "englishDisplayedName": "Training Result",
          "xPath": "user/cognitive/@trainingResult",
          "type": "ENUM",
          "possibleValues": {
            "STUPENDOUSLY": "Stupendously",
            "WELL_MAINTAINED": "Well Maintained",
            "NOT_PROGRESSING": "Not Progressing",
            "NIMBLY": "Nimbly"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Training is not progressing"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "MAIL"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "caregiver@email.com"
          }
        ]
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 12:52:20",
    "external": false
  },
  {
    "id": 541443398,
    "author": "applicationExpert4",
    "ruleName": "not progressing - activating light scene and candle illumination",
    "naturalLanguage": "When  Test-user training result becomes  not progressing  ,  do  turn on the   Living Room Light and set color to Pastel orange, start activating light scene in the living room",
    "priority": 0,
    "goal": "wellbeing",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "equal",
        "parent": "cognitive",
        "triggerType": "event",
        "value": "NOT_PROGRESSING",
        "element": {
          "realName": "trainingResult",
          "displayedName": "Training Result",
          "englishDisplayedName": "Training Result",
          "xPath": "user/cognitive/@trainingResult",
          "type": "ENUM",
          "possibleValues": {
            "STUPENDOUSLY": "Stupendously",
            "WELL_MAINTAINED": "Well Maintained",
            "NOT_PROGRESSING": "Not Progressing",
            "NIMBLY": "Nimbly"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "Sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Color light Living Room",
          "realName": "Hue color light Living Room",
          "description": "Living Room Light",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "parent": "LivingRoom",
        "type": "update:lightColor",
        "value": "#fab145",
        "duration": "0"
      },
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "description": "Start Activating Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Activate"
      }
    ],
    "cmURL": "https://tare.isti.cnr.it/cm_trialpetal_marco",
    "lastModified": "12-06-2020 13:03:10",
    "external": false
  },
  {
    "id": 490024077,
    "author": "applicationExpert5",
    "ruleName": "BOH",
	"naturalLanguage": "If the kitchen window sensor is open, turn off all kitchen lights",
    "naturalLanguageOriginal": "se il sensore della finestra della cucina è aperto, spegnere tutte le luci della cucina",
    "priority": 2,
    "goal": "safety",
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 4,
        "operator": "equal",
        "parent": "kitchen",
        "triggerType": "condition",
        "value": "OPEN",
        "element": {
          "realName": "windowSensor",
          "displayedName": "Window Sensor",
          "englishDisplayedName": "Window Sensor",
          "xPath": "environment/@windowSensor",
          "type": "ENUM",
          "value": "CLOSE",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "sequential",
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "description": "All Lights in the kitchen",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "parent": "Kitchen",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF"
      }
    ],
    "lastModified": "27-03-2020 19:44:51",
    "external": false
  },
  {
    "id": 2082796164,
    "author": "domainExpert10",
    "ruleName": "8-no_light",
    "naturalLanguage": "When  Bedroom light level becomes  no light  ,  do start biorhythm light scene in the bedroom",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 5,
        "operator": "equal",
        "parent": "bedroom",
        "triggerType": "event",
        "value": "NO_LIGHT",
        "element": {
          "realName": "lightLevel",
          "displayedName": "Light Level",
          "englishDisplayedName": "Light Level",
          "xPath": "environment/@lightLevel",
          "type": "ENUM",
          "value": "NO_LIGHT",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "description": "Start Biorhythm Light Scene in the Bedroom",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "BiorhythmLight"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1782958109,
    "author": "domainExpert10",
    "ruleName": "Great-Relaxlicht um 22 Uhr, falls Testperson im Wohnzimmer ist",
    "naturalLanguage": "When  Test-user   is  inside  livingroom and time becomes  more then  22:00 minutes ,  do start relaxing light scene in the living room",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "INSIDE",
        "element": {
          "realName": "typeOfProximity",
          "displayedName": "Type of Proximity",
          "englishDisplayedName": "Type of Proximity",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "type": "ENUM",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "nextOperator": "and",
        "operator": "equal",
        "parent": "relativePosition",
        "type": "linked",
        "triggerType": "event",
        "value": "LIVINGROOM",
        "element": {
          "realName": "pointOfInterest",
          "displayedName": "Point of Interest",
          "englishDisplayedName": "Point of Interest",
          "xPath": "user/position/relativePosition/@pointOfInterest",
          "type": "ENUM",
          "possibleValues": {
            "KITCHEN": "Kitchen",
            "LIVINGROOM": "LivingRoom",
            "BEDROOM": "Bedroom",
            "ENTRANCE": "Entrance",
            "BATHROOM": "Bathroom",
            "HOUSE": "House"
          },
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      },
      {
        "changesTo": false,
        "dimension": "environments",
        "dimensionId": 14,
        "nextOperator": "and",
        "operator": "more",
        "parent": "dateTime",
        "triggerType": "event",
        "value": "22:00",
        "element": {
          "realName": "localTime",
          "displayedName": "Time",
          "englishDisplayedName": "Time",
          "xPath": "environment/dateTime/@localTime",
          "type": "TIME",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": []
      }
    ],
    "actionMode": "sequential",
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "description": "Start Relaxing Light Scene in the Living Room",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax"
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": 1795131732,
    "author": "domainExpert10",
    "ruleName": "Erinnerungen Trainingsuebungen auf dem Tablet",
    "naturalLanguage": "if  Test-user last connection time is  more then  48  ,  do send  one  reminder  by notification",
    "priority": 0,
    "triggers": [
      {
        "changesTo": false,
        "dimension": "users",
        "dimensionId": 1,
        "operator": "more",
        "parent": "cognitive",
        "triggerType": "condition",
        "value": "48",
        "element": {
          "realName": "lastConnectionTime",
          "displayedName": "Last Connection",
          "englishDisplayedName": "Last Connection",
          "xPath": "user/cognitive/@lastConnectionTime",
          "type": "INTEGER",
          "triggerType": "BOTH"
        },
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": []
      }
    ],
    "actionMode": "sequential",
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "composed"
        },
        "type": "composed",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Bitte Uebungen auf dem Tablet machen"
          },
          {
            "description": "Mode",
            "displayedName": "Notification Mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times reminder should be sent",
            "displayedName": "Repetition",
            "realName": "Repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "To",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ]
      }
    ],
    "external": false,
    "lastModified": "---"
  },
  {
    "id": "f7ee29ad-141d-4ff6-8907-cc2ac0a702a8",
    "author": "student2019-1",
    "ruleName": "regola 1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-11-9-622",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:00",
          "00:05"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Lo sportello del frigorifero è aperto.\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "dcfbbe1b-ad2d-40de-9ac7-5114d31f415d",
    "author": "student2019-1",
    "ruleName": "regola 2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-11-53-320",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-outdoorTemperature",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "dateTime-localTime",
        "value": {
          "startTime": "07:30",
          "endTime": "00:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        }
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "",
        "blockcomposer-type": "currentWeather-outdoorTemperature",
        "value": "14",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "possibleValues": "14",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorTemperature",
          "dimensionId": 14
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ricorda di prendere sciarpa e guanti!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8111d3f9-ed6d-4bee-a5ed-6bce12e4e966",
    "author": "student2019-1",
    "ruleName": "regola 3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-13-23-579",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "blockcomposer-type": "bedroom-motion",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "07:00",
          "07:15"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bedroom - Motion",
          "realName": "motion",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@motion",
          "dimensionId": 5
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Activate",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Sveglia, farai tardi.\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b5c9a3fd-d2af-41cf-993c-60005a6b4db5",
    "author": "student2019-1",
    "ruleName": "regola 4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-13-58-768",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "blockcomposer-type": "timeInsideARoom-timeInsideBedroom",
        "value": "20",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bedroom",
          "possibleValues": "20",
          "realName": "timeInsideBedroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBedroom",
          "dimensionId": 1
        }
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "blockcomposer-type": "bedroomLight-state",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Relax",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Modalità  risparmio energetico attivata.\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "77de7738-3465-4356-bb8e-cbb91ff53755",
    "author": "student2019-1",
    "ruleName": "regola 5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-14-46-357",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomPortableLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "blockcomposer-type": "personalData-age",
        "value": "70",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Age",
          "possibleValues": "70",
          "realName": "age",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/personalData/@age",
          "dimensionId": 1
        }
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Corridor-Light Strip Corridor",
        "operator": "EQUAL",
        "parent": "Bedroom Portable Light",
        "blockcomposer-type": "bedroomPortableLight-state",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Portable Light - State",
          "realName": "state",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 12
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Corridor-Light Strip Corridor",
          "xPath": "applianceState/Corridor/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Corridor",
        "nextElement": "Reminders",
        "type": "update:lightColor",
        "value": "#ffff99",
        "duration": "10",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"La luce del comodino è accesa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "parente"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "82f98aca-3f37-40cd-96d8-438d30a0a548",
    "author": "student2019-2",
    "ruleName": "regola 1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-36-19-836",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "MORETHEN",
        "parent": "Bedroom Portable Light",
        "blockcomposer-type": "bedroomPortableLight-brightness",
        "value": "100",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Portable Light - Brightness",
          "realName": "brightness",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@brightness",
          "dimensionId": 12
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Abbassare luminosità \""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "mail@provider.it"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8eacd991-8610-4a22-a1a5-7b4dc06c55dd",
    "author": "student2019-2",
    "ruleName": "regola 2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-44-25-960",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "or",
        "nextElement": "livingRoom-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "Entrance",
        "blockcomposer-type": "entrance-doorWindowSensor",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 2
        }
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "blockcomposer-type": "livingRoom-doorWindowSensor",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Chiudere porte e/o finestre\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Giulia"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b68dd0c9-61ec-4938-876d-615e704221d9",
    "author": "student2019-2",
    "ruleName": "regola 3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-45-36-18",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "BiorhythmLight",
        "operator": "MORETHEN",
        "parent": "",
        "blockcomposer-type": "physiological-steps",
        "value": "500",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "07:19",
          "21:19"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Steps",
          "realName": "steps",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@steps",
          "dimensionId": 1
        }
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/all/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "All",
        "nextElement": "Alarms",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Aumentare attività  fisica\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Giulia"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "cd297508-423f-4399-bce1-a2fc2962bd0a",
    "author": "student2019-2",
    "ruleName": "regola 4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-46-22-115",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchenLight-brightness",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "blockcomposer-type": "kitchen-smokeSensor",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        }
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light Kitchen",
        "operator": "LESSTHEN",
        "parent": "Kitchen Light",
        "blockcomposer-type": "kitchenLight-brightness",
        "value": "30",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - Brightness",
          "realName": "brightness",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@brightness",
          "dimensionId": 10
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light Kitchen",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Kitchen",
        "nextElement": "Alarms",
        "type": "update:lightColor",
        "value": "#cc0000",
        "duration": "10",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Fuoriuscita di fumo in cucina\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Giulia"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "66f7a5b0-ee6f-48fa-b349-2b84c12febca",
    "author": "student2019-2",
    "ruleName": "regola 5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-46-59-474",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "personalData-age",
        "operator": "EQUAL",
        "parent": "Fridge",
        "blockcomposer-type": "fridge-door",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        }
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "MORETHEN",
        "parent": "",
        "blockcomposer-type": "personalData-age",
        "value": "75",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Age",
          "possibleValues": "75",
          "realName": "age",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/personalData/@age",
          "dimensionId": 1
        }
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"chiudere sportello frigorifero\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": ""
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "44d315c0-2d15-4f34-a86e-f422e390d4f9",
    "author": "student2019-3",
    "ruleName": "accendi le luci della sala alle 7",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-50-36-831",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "blockcomposer-type": "livingroomLight-state",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "realName": "state",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        }
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "dateTime-localTime",
        "value": {
          "startTime": "07:00",
          "endTime": "00:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Accese le luci\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Francesca"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c45ec668-d4a5-4ae9-a79f-6a07d349421e",
    "author": "student2019-3",
    "ruleName": "porta del frigo aperta",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-51-17-22",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "blockcomposer-type": "fridge-door",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Porta del frigo aperta\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Francesca"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f646d977-5865-4af9-a1b1-d915a5e10320",
    "author": "student2019-3",
    "ruleName": "luci della camera accese",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-51-47-127",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "relativePosition-typeOfProximity",
        "operator": "EQUAL",
        "parent": "Bedroom Portable Light",
        "blockcomposer-type": "bedroomPortableLight-state",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Portable Light - State",
          "realName": "state",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 12
        }
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "INSIDE",
        "parent": "",
        "blockcomposer-type": "relativePosition-typeOfProximity",
        "value": "BEDROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        }
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"luci accese!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Francesca"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "aca7c9b2-3a9b-46cb-8526-763781ff3f98",
    "author": "student2019-3",
    "ruleName": "se non sei di buon umore",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-52-10-533",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "cognitive-emotionalState",
        "value": "HAPPY",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Emotional State",
          "possibleValues": {
            "BORED": "Bored",
            "HAPPY": "Happy",
            "AMUSED": "Amused",
            "WORRIED": "Worried",
            "SAD": "Sad",
            "SERENE": "Serene",
            "ANGRY": "Angry",
            "ENTHUSIAST": "Enthusiast"
          },
          "realName": "emotionalState",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/cognitive/@emotionalState",
          "dimensionId": 1
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Chiama  mamma\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "0ebb7df5-dfa7-43d9-b6f5-ef3b160f995c",
    "author": "student2019-3",
    "ruleName": "vai a lavoro presto il 9",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-52-53-893",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localDate",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "dateTime-localTime",
        "value": {
          "startTime": "06:50",
          "endTime": "00:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        }
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "dateTime-localDate",
        "value": "2019-02-09",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Date",
          "realName": "localDate",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localDate",
          "dimensionId": 14
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Svegliati\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Francesca"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "5f41c65c-9a88-41e0-8f5c-09ef938136f8",
    "author": "student2019-4",
    "ruleName": "porta del frigo apera",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-54-11-246",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "blockcomposer-type": "fridge-door",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Chiudi la porta del frigo\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "ed0c94cc-26f1-43c3-ba1a-f7878563e513",
    "author": "student2019-4",
    "ruleName": "accendi il riscaldamento camera da letto",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-54-36-719",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "LESSTHEN",
        "parent": "Bedroom",
        "blockcomposer-type": "bedroom-temperatureLevel",
        "value": "22",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 5
        }
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "dateTime-localTime",
        "value": {
          "startTime": "22:00",
          "endTime": "22:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Imposta il riscaldamento a 22°\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "75ddb41b-a56a-4714-95c0-e67b73f8f6c0",
    "author": "student2019-4",
    "ruleName": "allenamento giornaliero",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-55-20-838",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "cognitive-trainingTime",
        "value": "60",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "08:00",
          "10:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Training Time",
          "possibleValues": "60",
          "realName": "trainingTime",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/cognitive/@trainingTime",
          "dimensionId": 1
        }
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Devi allenarti per almeno 60 minuti al giorno!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c5ebabfc-035e-4a88-9ed2-4a9ddbf0316a",
    "author": "student2019-4",
    "ruleName": "domani pioverà ",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-55-45-414",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "greatLuminaire-state",
        "operator": "EQUAL",
        "parent": "",
        "blockcomposer-type": "twentyFourHoursWeatherForecast-rain",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/twentyFourHoursWeatherForecast/@rain",
          "dimensionId": 14
        }
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Great Luminaire",
        "blockcomposer-type": "greatLuminaire-state",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Great Luminaire - State",
          "realName": "state",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 8
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light Living Room",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Ricordati che domani pioverà \""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Hue color light Living Room",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#33ffff",
        "duration": "30",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9ed3bc76-63e3-4557-b4d8-30f643001b00",
    "author": "student2019-4",
    "ruleName": "luce camera da letto accesa per errore",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-56-43-831",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "OUTSIDE",
        "parent": "",
        "blockcomposer-type": "relativePosition-typeOfProximity",
        "value": "BEDROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        }
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "blockcomposer-type": "bedroomLight-state",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Hai acceso la luce per errore\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b3930e5c-ecc7-4c1f-80db-1243f73975f1",
    "author": "student2019-5",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-57-38-39",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "blockcomposer-type": "fridge-door",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        }
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Close fridge's door\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "88efecda-a904-43b3-ba36-a14fa85819a4",
    "author": "student2019-5",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-57-54-28",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "possibleValues": null,
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Close the windows\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "0320272e-e5b4-457f-aa91-5b3f2ad04739",
    "author": "student2019-5",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-58-12-584",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light Kitchen",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "08:00",
          "09:00"
        ],
        "isNot": true,
        "value": "cardio aspirina",
        "element": {
          "displayedName": "Medicine Taken",
          "realName": "medicationName",
          "triggerType": "both",
          "type": "STRING",
          "unit": "",
          "xPath": "user/activity/@medicationName",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-medicationName"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light Kitchen",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Kitchen",
        "nextElement": "Alarms",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "1",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Cardioaspirina\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e3099047-1609-47df-a4b1-85048dc68f64",
    "author": "student2019-5",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-58-50-969",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-color",
        "operator": "LESSTHEN",
        "parent": "Bedroom",
        "value": "13",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Temperature",
          "possibleValues": "13",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-temperatureLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "AZURE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - Color",
          "possibleValues": {
            "WHITE": "White",
            "BLUE": "Blue",
            "BEIGE": "Beige",
            "PURPLE": "Purple",
            "GREEN": "Green",
            "RED": "Red",
            "AZURE": "Azure",
            "PINK": "Pink",
            "CREAM": "Cream",
            "VIOLET": "Violet",
            "YELLOW": "Yellow",
            "BROWN": "Brown",
            "ORANGE": "Orange"
          },
          "realName": "color",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@color",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-color"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Low temperature in bedroom\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4c37de97-efeb-4931-a58a-5320bc38d674",
    "author": "student2019-5",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-12-59-10-656",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomPortableLight-state",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom Portable Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Portable Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 12
        },
        "blockcomposer-type": "bedroomPortableLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Wake up\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "7fbb444a-d9b5-41ca-aee7-ea69eda933c3",
    "author": "student2019-6",
    "ruleName": "close fridge",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-2-39-187",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Remember to close the fridge\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Martina"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a4dc5633-cefb-476e-a931-36c758044ec1",
    "author": "student2019-6",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-10-37-787",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "",
        "value": "THUNDERSTORM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Remember to close the windows\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Martina"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "68cc4a0d-f52e-4c77-b37d-175080a8254e",
    "author": "student2019-6",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-11-7-162",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:00",
          "06:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Entrance - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Be careful, thiefs!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Martina"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "xPath": "applianceState/all/allLight",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "fd0a57cd-5e98-4716-b37a-b816a9d102c2",
    "author": "student2019-6",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-11-24-913",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-lightLevel",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": true,
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Gas leak!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Martina"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "Hue color light Kitchen",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Hue color light Kitchen",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "30",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b6fcfa7f-a64f-4573-9cbc-56d179b1c234",
    "author": "student2019-6",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-11-45-624",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroom-lightLevel",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Have a nice day!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Martina"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "47242790-49ea-4650-9bba-8b95f5db0f44",
    "author": "student2019-7",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-12-16-674",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Hai lasciato il frigo aperto!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "edoardo"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "21f08e92-6d2f-442a-9a3a-4445f193880e",
    "author": "student2019-7",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-12-46-434",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-gasSensor",
        "operator": "OUTSIDE",
        "parent": "",
        "value": "KITCHEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "BiorhythmLight",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/all/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "All",
        "nextElement": "Alarms",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Il sensore del gas è attivo, controlla di averlo spento!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "edoardo"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "0bf39de4-3a7d-427d-a095-ed20728eb16e",
    "author": "student2019-7",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-13-7-755",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": "SAD",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Emotional State",
          "possibleValues": {
            "BORED": "Bored",
            "HAPPY": "Happy",
            "AMUSED": "Amused",
            "WORRIED": "Worried",
            "SAD": "Sad",
            "SERENE": "Serene",
            "ANGRY": "Angry",
            "ENTHUSIAST": "Enthusiast"
          },
          "realName": "emotionalState",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/cognitive/@emotionalState",
          "dimensionId": 1
        },
        "blockcomposer-type": "cognitive-emotionalState"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Vuoi che metta un po' di musica?\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "edoardo"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "bcec60fe-9865-4b70-8e4a-804739f769e6",
    "author": "student2019-7",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-13-20-979",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Piove, chiudi le finestre\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "edoardo"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9b5a9197-d049-4b0a-8fd7-7c560b1ecb0e",
    "author": "student2019-7",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-14-4-795",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "BiorhythmLight",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "14:00",
          "15:00"
        ],
        "isNot": true,
        "value": "pressione",
        "element": {
          "displayedName": "Medicine Taken",
          "realName": "medicationName",
          "triggerType": "both",
          "type": "STRING",
          "unit": "",
          "xPath": "user/activity/@medicationName",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-medicationName"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/all/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "All",
        "nextElement": "Alarms",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Non hai preso la medicina!!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "edoardo"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c4e9d6e9-e2ca-40f8-92bb-56c390706437",
    "author": "student2019-8",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-24-40-586",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchenLight-state",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light bedroom",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Qualcuno ha dimenticato di chiudere il gas?\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "5",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "84892db3-34ff-4493-afcf-396cd9601118",
    "author": "student2019-8",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-25-42-826",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "corridor-doorWindowSensor",
        "operator": "LESSTHEN",
        "parent": "",
        "value": "6",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/twentyFourHoursWeatherForecast/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "twentyFourHoursWeatherForecast-outdoorTemperature"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Corridor",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "Corridor - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 7
        },
        "blockcomposer-type": "corridor-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"c'è freddo, è meglio tu chiuda la finestra del corridoio\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "84bfbfb4-489c-4a1e-9bfa-507f511c9e27",
    "author": "student2019-8",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-26-29-586",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "OUTSIDE",
        "parent": "",
        "value": "BATHROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Corridor-Light Strip Corridor",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Corridor-Light Strip Corridor",
          "xPath": "applianceState/Corridor/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Corridor",
        "nextElement": "Reminders",
        "type": "update:lightColor",
        "value": "#9999ff",
        "duration": "1",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ricordati di spegnere la luce quando esci dal bagno\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "abdc0094-0622-4a40-ad09-5afb39e1f991",
    "author": "student2019-8",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-26-45-442",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "Kitchen Light",
        "value": "1",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - Brightness",
          "realName": "brightness",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@brightness",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-brightness"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Cambia la lampadina della cucina\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "123412312"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3e0e4090-8a37-48b4-a9e4-fb4853710e26",
    "author": "student2019-8",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-27-12-586",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "MORETHEN",
        "parent": "",
        "value": "7000",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "Steps",
          "realName": "steps",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@steps",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-steps"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light Living Room",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Oggi hai fatto poco esercizio fisico. Dovresti fare una passeggiata.\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Hue color light Living Room",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ffcc00",
        "duration": "1",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4abaf892-9faf-483c-b2aa-01395946c72a",
    "author": "student2019-9",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-28-43-683",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"luce soggiorno accesa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "135625e8-5b2a-41f1-a2e0-99b897bac6ca",
    "author": "student2019-9",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-28-57-459",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-rain",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorWindowSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"chiudere la finestra\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "utente"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "465b0445-18fc-4979-926e-2d51ebf3a4e1",
    "author": "student2019-9",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-29-29-900",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "INSIDE",
        "parent": "",
        "value": "LIVINGROOM",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "2019-25-12",
          "09:00",
          "22:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"luci spente\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "utente"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "xPath": "applianceState/all/allLight",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "34cbf3c6-a1cf-4c83-af6b-0e217bc4e726",
    "author": "student2019-9",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-29-56-317",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "greatLuminaire-state",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Motion",
          "realName": "motion",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@motion",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-motion"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Great Luminaire",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Great Luminaire - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 8
        },
        "blockcomposer-type": "greatLuminaire-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"movimento in casa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "utente"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "xPath": "applianceState/all/allLight",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "34369a52-cc75-440e-a711-e029b6437166",
    "author": "student2019-9",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-30-27-651",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"appuntamenti di oggi\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "utente"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c1dafea2-723d-4f3c-921b-a6f30bc4c60a",
    "author": "student2019-10",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-31-8-900",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom Portable Light",
        "value": "0",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Portable Light - Color Temperature",
          "realName": "temperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@temperature",
          "dimensionId": 12
        },
        "blockcomposer-type": "bedroomPortableLight-temperature"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Non affatticare la vista, vira il colore su tonalità  più calde\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "25c3de98-eb63-4cbc-9f11-615575cf50a7",
    "author": "student2019-10",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-32-2-405",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroom-lightLevel",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "21:30",
          "endTime": "00:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "NORMAL_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Abbassa la luminosità  della luce per riposare meglio\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "85495d69-92d7-4ddb-b1b6-c489fe694ebd",
    "author": "student2019-10",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-33-49-956",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "fridge-door",
        "operator": "OUTSIDE",
        "parent": "",
        "value": "KITCHEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Corridor/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Corridor",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Il frigorifero è rimasto aperto\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4588fbfd-de8c-4190-8331-dd00fb70c93e",
    "author": "student2019-10",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-34-12-274",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchenLight-state",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-smokeSensor"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Fumo in cucina.\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d0f8603f-0cd6-4c59-8503-37390aff412a",
    "author": "student2019-10",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-35-23-393",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "06:00",
          "10:00"
        ],
        "isNot": true,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Reminders",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Ti sei svegliato ad un orario insolito. Potresti dover recuperare energie per domani!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Novità  sul tuo sonno, guarda la tua mail\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3c4fd0bf-7e11-4030-9b21-4049004f3fba",
    "author": "student2019-11",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-52-36-524",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"La porta del frigorifero è aperta\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "65daba24-4386-441d-9ed6-0ff0c107e212",
    "author": "student2019-11",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-53-11-370",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "DAY_LIGHT",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "18:00",
          "20:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"La luce del soggiorno è stata appena accesa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "bae86fd0-98c2-4774-9d79-4b5e552860bd",
    "author": "student2019-11",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-53-33-651",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entranceLight-state",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorWindowSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"La luce d'ingresso è stata appena accesa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d53767aa-f92b-4540-b461-4ddf6316066b",
    "author": "student2019-11",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-53-54-346",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "INSIDE",
        "parent": "",
        "value": "BEDROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"La luce della camera è stata accesa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "6d810c93-1383-4da6-8e3a-bf73773f60ce",
    "author": "student2019-11",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-54-7-58",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-doorWindowSensor",
        "operator": "LESSTHEN",
        "parent": "LivingRoom",
        "value": "10",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-temperatureLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": "OPEN",
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"La finestra del soggiorno è aperta e la temperatura interna è troppo bassa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "975beab7-7724-485c-b01a-afdd4202e211",
    "author": "student2019-12",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-54-38-242",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "DAY_LIGHT",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"La luce in camera è accesa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Francesco"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c805ffdc-fcde-4431-919f-7efa3b2d5d4c",
    "author": "student2019-12",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-54-49-890",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "",
        "value": "FOG",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"E' opportuno chiudere la finestra della cucina causa forte nebbia\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "FRancesco"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "266f3a3d-af3d-4ec1-ae52-8284dd1e6c6f",
    "author": "student2019-12",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-55-7-515",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "LESSTHEN",
        "parent": "",
        "value": "100",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:00",
          "07:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Heart Rate",
          "realName": "heartRate",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@heartRate",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-heartRate"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light bedroom",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Controlla la pressione\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Francesco"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#66ffff",
        "duration": "5",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3b46d821-2419-4557-b184-d03c037752b7",
    "author": "student2019-12",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-55-48-748",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchenLight-state",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-doorWindowSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Finestra di cucina aperta\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Francesco"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "87c40543-2bd5-4741-bc5f-d881bd3144ae",
    "author": "student2019-12",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-56-11-243",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "15",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bathroom",
          "possibleValues": "15",
          "realName": "timeInsideBathroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBathroom"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light bathroom",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light bathroom",
          "xPath": "applianceState/bathroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "1",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"!5 minuti trascorsi in bagno\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Francesco"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e26db514-f135-40d6-a2d0-5d56262bb106",
    "author": "student2019-13",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-57-33-992",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Corridor Light Strip",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor Light Strip - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 13
        },
        "blockcomposer-type": "corridorLightStrip-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"reminder text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "1c0b985d-bb9c-4ba7-ba0d-95cf5a8e6548",
    "author": "student2019-13",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-57-47-844",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-temperatureLevel",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "LivingRoom",
        "value": "20",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"reminder text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "utente"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "191559bb-e857-4bdb-8cf4-2cd6dc336354",
    "author": "student2019-13",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-58-16-151",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:00",
          "08:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Entrance - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"alarm text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f651fb0d-249f-48b6-88e7-706e12a95ae0",
    "author": "student2019-13",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-58-36-172",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-lightLevel",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-smokeSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"alarm text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "utente"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e1c90be0-7a20-49d1-805e-332027ab28bf",
    "author": "student2019-13",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-58-53-909",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroom-lightLevel",
        "operator": "OUTSIDE",
        "parent": "",
        "value": "BATHROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "realName": "typeOfProximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "value": "NORMAL_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"reminder text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/All/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "2c4a33ef-e155-4b45-a2bf-5ceb3319a1a2",
    "author": "student2019-14",
    "ruleName": "condizione",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-14-59-46-38",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "value": "RAIN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ricorda l'ombrello\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "98a4e1f1-16f0-4a45-afbc-8f531eb8f638",
    "author": "student2019-14",
    "ruleName": "condizione doppia",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-0-8-345",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "or",
        "nextElement": "kitchen-temperatureLevel",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-smokeSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "MORETHEN",
        "parent": "Kitchen",
        "value": "40",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "BiorhythmLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Incendio\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "115"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/Entrance/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "Entrance",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c1060b8e-6b7f-4b49-bad9-2236fbbb5ede",
    "author": "student2019-14",
    "ruleName": "evento e condizione",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-0-44-664",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "cognitive-emotionalState",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "00:00",
          "00:06"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "",
        "value": "HAPPY",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Emotional State",
          "possibleValues": {
            "BORED": "Bored",
            "HAPPY": "Happy",
            "AMUSED": "Amused",
            "WORRIED": "Worried",
            "SAD": "Sad",
            "SERENE": "Serene",
            "ANGRY": "Angry",
            "ENTHUSIAST": "Enthusiast"
          },
          "realName": "emotionalState",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/cognitive/@emotionalState",
          "dimensionId": 1
        },
        "blockcomposer-type": "cognitive-emotionalState"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/Kitchen/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "Kitchen",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Fai uno spuntino e chiudi il frigo quando hai finito\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "2f08fba9-cc85-417a-8dcb-2b3e0a4df7f0",
    "author": "student2019-14",
    "ruleName": "not",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-1-42-897",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Utente non si è svegliato\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Parente 1"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/All/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d92eaeb0-71a0-488a-9dd3-b5a4aa6459df",
    "author": "student2019-14",
    "ruleName": "notifica",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-2-1-21",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Chiudi la finestra\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a3871bcc-e727-4c7f-b16e-9d383d8a91b9",
    "author": "student2019-15",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-2-59-126",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"\\\"Attenzione! Lo sportello del frigo è aperto!\\\"\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "speacker"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8f8b8003-f532-4502-95d4-30c118379387",
    "author": "student2019-15",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-3-9-606",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-temperatureLevel",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "19:00",
          "endTime": "20:30"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "LivingRoom",
        "value": "18",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"\\\"Accendi il  riscaldamento!\\\"\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Speakers"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "92339ef8-c54d-43b8-a22e-9a97b9eaa857",
    "author": "student2019-15",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-4-49-768",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "07:00",
          "07:10"
        ],
        "isNot": true,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light bedroom",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Sveglia\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "speakers"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ffff00",
        "duration": "10",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "92167974-1c0e-4b5c-a7e1-071cafddde00",
    "author": "student2019-15",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-5-4-977",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entrance-motion",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Motion",
          "realName": "motion",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@motion",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-motion"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light bedroom",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Bentornato\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "0123456789"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ffffff",
        "duration": "3",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3a82f5c2-2cbd-47db-ba66-6f8853b82ebe",
    "author": "student2019-15",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-5-21-215",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "INSIDE",
        "parent": "",
        "value": "BATHROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "realName": "typeOfProximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Attento al gradino\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4ee5f49e-097d-4081-9034-fe8626850609",
    "author": "student2019-16",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-6-29-81",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Spegnere la luce\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Ylenia"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f17631db-9350-4054-aaf5-b775cf83dd23",
    "author": "student2019-16",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-6-54-417",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "",
        "value": "THUNDERSTORM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Chiudi le finestre\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "mailstudent@provider.it"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a59664a4-6401-4bc9-8b87-db02b9d7dbf8",
    "author": "student2019-16",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-7-12-938",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "MORETHEN",
        "parent": "LivingRoom",
        "value": "12",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "13:00",
          "18:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "LivingRoom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Accendi i termosifoni\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Ylenia"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/All/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "1c24101d-2690-4c9a-b7b4-6190f25c017c",
    "author": "student2019-16",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-7-31-153",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Bathroom - Smoke Sensor",
          "possibleValues": null,
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-smokeSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Controllare il bagno\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Ylenia"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/All/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9d46284f-53b7-4cf8-b284-e94dc0068c2c",
    "author": "student2019-16",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-7-50-651",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-doorWindowSensor",
        "operator": "MORETHEN",
        "parent": "",
        "value": "50",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Kitchen",
          "possibleValues": "50",
          "realName": "timeInsideKitchen",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideKitchen",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideKitchen"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light Kitchen",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light Kitchen",
          "xPath": "applianceState/Kitchen/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Kitchen",
        "nextElement": "Reminders",
        "type": "update:lightColor",
        "value": "#cc0000",
        "duration": "10",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Controllare il microonde\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Maria"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "7402195c-8b78-4d98-8208-1d249f363127",
    "author": "student2019-17",
    "ruleName": "condizionatore",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-8-36-354",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "30",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Accendi il condizionatore!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Simone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "32206a9f-19d4-4610-85f2-08541b99836b",
    "author": "student2019-17",
    "ruleName": "fornelli",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-8-53-446",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-gasSensor",
        "operator": "EQUAL",
        "parent": "",
        "value": "30",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Kitchen",
          "possibleValues": "30",
          "realName": "timeInsideKitchen",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideKitchen",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideKitchen"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Spegni i fornelli!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Simone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "08d1c3fe-4ccb-4945-886a-c090e028cd54",
    "author": "student2019-17",
    "ruleName": "frigorifero",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-9-47-446",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:00",
          "00:06"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Relax",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Chiudi il frigo!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Simone"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "Bedroom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e4c340c3-94da-4b95-9f39-233a3175e603",
    "author": "student2019-17",
    "ruleName": "welcome",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-10-52-320",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entranceLight-state",
        "operator": "EQUAL",
        "parent": "Entrance",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Motion",
          "realName": "motion",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@motion",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-motion"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light Entrance",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light Entrance",
          "xPath": "applianceState/Entrance/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Entrance",
        "nextElement": "Alarms",
        "type": "update:lightColor",
        "value": "#ffffff",
        "duration": "2",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Bentornato!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Simone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "aef3ed8d-6e06-480e-967a-5b480f09ea66",
    "author": "student2019-17",
    "ruleName": "buongiorno",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-11-12-135",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "value": "true",
        "isNot": false,
        "element": {
          "displayedName": "Waking Up",
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Buongiorno!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Simone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4a7883dc-ec26-4c9a-a704-5eab108a0367",
    "author": "student2019-18",
    "ruleName": "arrivocasa",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-12-35-325",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "INSIDE",
        "parent": "",
        "value": "ENTRANCE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "AllLight",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Corridor/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "74db63c8-7d56-4612-9ab0-d3b9ecdcfa1d",
    "author": "student2019-18",
    "ruleName": "cucina fumo",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-13-9-672",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "relativePosition-typeOfProximity",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-smokeSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "OUTSIDE",
        "parent": "",
        "value": "ENTRANCE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "realName": "typeOfProximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"!ATTENZIONE! Sensori di fumo attivi\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e589a97c-3767-4c40-8633-f3cc2508b97a",
    "author": "student2019-18",
    "ruleName": "medicina cuore",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-14-33-950",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "activity-medicationName",
        "operator": "MORETHEN",
        "parent": "",
        "value": "199",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Heart Rate",
          "realName": "heartRate",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@heartRate",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-heartRate"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "value": "medicina per il cuore",
        "element": {
          "displayedName": "Medicine Taken",
          "realName": "medicationName",
          "triggerType": "both",
          "type": "STRING",
          "unit": "",
          "xPath": "user/activity/@medicationName",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-medicationName"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Attenzione, battito cardiaco alto!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "parents"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "22364733-a8d9-440d-b86e-417680c6aada",
    "author": "student2019-18",
    "ruleName": "pioggia",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-15-22-527",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "corridor-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "BiorhythmLight",
        "operator": "EQUAL",
        "parent": "Corridor",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 7
        },
        "blockcomposer-type": "corridor-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/all/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "All",
        "nextElement": "Reminders",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Piove! Hai scordato le finestre aperte\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f896e1e0-6cf1-4d8a-bc48-2a7afb78baca",
    "author": "student2019-18",
    "ruleName": "sveglia",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-16-38-911",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Activate",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "09:00",
          "09:30"
        ],
        "isNot": true,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"E' ora di alzarsi\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3bcb56e7-4587-492a-a267-f8c46231cd40",
    "author": "student2019-19",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-35-55-2",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ricordati di spegnere la luce!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Proprietario di casa"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8792cac9-f5ee-4dee-87f2-e2f7fae5fa08",
    "author": "student2019-19",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-36-6-274",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-rainQuantity",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "MORETHEN",
        "parent": "",
        "value": "10",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Rain Quantity",
          "realName": "rainQuantity",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@rainQuantity",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rainQuantity"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ricordati di prendere l'ombrello!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Utente"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a6a3e2b6-0139-4c3c-8a43-c92be546aa3d",
    "author": "student2019-19",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-37-1-879",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "23:00",
          "06:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "Hue color light bedroom",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Porta del frigo aperta!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Proprietario di casa"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "1",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a6b53ce5-c2d9-4200-989b-8de3fa75feed",
    "author": "student2019-19",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-37-29-234",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "corridorLightStrip-color",
        "operator": "EQUAL",
        "parent": "Corridor",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Corridor - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 7
        },
        "blockcomposer-type": "corridor-smokeSensor"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Corridor Light Strip",
        "value": "RED",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor Light Strip - Color",
          "possibleValues": {
            "WHITE": "White",
            "BLUE": "Blue",
            "BEIGE": "Beige",
            "PURPLE": "Purple",
            "GREEN": "Green",
            "RED": "Red",
            "AZURE": "Azure",
            "PINK": "Pink",
            "CREAM": "Cream",
            "VIOLET": "Violet",
            "YELLOW": "Yellow",
            "BROWN": "Brown",
            "ORANGE": "Orange"
          },
          "realName": "color",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@color",
          "dimensionId": 13
        },
        "blockcomposer-type": "corridorLightStrip-color"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "BiorhythmLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Fumo nel corridoio!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Proprietario di casa"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/All/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b526e18b-1d44-4575-bdb1-63d24110b803",
    "author": "student2019-19",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-37-53-442",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Activate",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Buongiorno!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Proprietario di casa"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "be230135-437f-4d21-a433-23950c082ef2",
    "author": "student2019-20",
    "ruleName": "1",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-38-47-907",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entranceLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "1",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bedroom",
          "possibleValues": "1",
          "realName": "timeInsideBedroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBedroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBedroom"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "Hue color light bedroom",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"switch the light off\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "2",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "7d213ed6-fe4b-4850-9b14-9b9b1cd2e846",
    "author": "student2019-20",
    "ruleName": "2",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-39-14-437",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-lightLevel",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Corridor-Light Strip Corridor",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"close the fridge door\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Corridor-Light Strip Corridor",
          "xPath": "applianceState/Corridor/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "1",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "7dd941f5-b1eb-4852-8081-b642707a8a3d",
    "author": "student2019-20",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-39-26-131",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroom-doorWindowSensor",
        "operator": "EQUAL",
        "parent": "",
        "value": "SHOWER_RAIN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Door Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorWindowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorWindowSensor",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-doorWindowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"close the window\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "90bdd2bf-e5df-48ff-a469-418b6a7ce2e5",
    "author": "student2019-20",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-40-15-477",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "07:00",
          "11:00"
        ],
        "isNot": true,
        "value": "true",
        "element": {
          "displayedName": "Waking Up",
          "possibleValues": null,
          "realName": "wakingup",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "user/activity/@wakingup",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-wakingup"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Activate",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"user has not woken up yet\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e397152d-c79c-4574-b2fa-86af4f6b75cf",
    "author": "student2019-20",
    "ruleName": "5",
    "priority": 1,
    "goal": "none",
    "timestamp": "8-1-2021-15-40-40-847",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Corridor Light Strip",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor Light Strip - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 13
        },
        "blockcomposer-type": "corridorLightStrip-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"switch the corridor light strip on\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "6f056991-0341-43e1-be8d-2164e9978207",
    "author": "student2020-1",
    "ruleName": "Regola 1",
    "naturalLanguage": "if  Microwave door is  open  ,  do send  one  reminder  by voice",
    "priority": 1,
    "goal": "none",
    "timestamp": "24-10-2020-10-57-1-993",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"close microwave door\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d53b7681-ec5c-4241-b60d-228f0f99e113",
    "author": "student2020-1",
    "ruleName": "Regola 2",
    "priority": 1,
    "goal": "none",
    "timestamp": "24-10-2020-11-41-6-393",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "08:00",
          "20:00"
        ],
        "isNot": true,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light Living Room",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Do laundry\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Hue color light Living Room",
          "xPath": "applianceState/LivingRoom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#3366ff",
        "duration": "2",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "03528992-a5f4-4359-ae06-54f34214e230",
    "author": "student2020-1",
    "ruleName": "Regola 3",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-12-38-44-776",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-temperatureLevel",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Motion",
          "realName": "motion",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@motion",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-motion"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "LivingRoom",
        "value": "18",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "check the radiators"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "edc40ac8-6834-4bdd-8de1-b91ebc2e3c4c",
    "author": "student2020-1",
    "ruleName": "Regola 4",
    "naturalLanguage": "if  Entrance light level is    dark  or  Entrance Light saturation is    less then  5  ,  do send  one  alarm  by notification,  turn on all lights in the entrance",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-12-41-38-311",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "or",
        "nextElement": "entranceLight-saturation",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "DARK",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-lightLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "LESSTHEN",
        "parent": "Entrance Light",
        "value": "5",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - Saturation",
          "realName": "saturation",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@saturation",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-saturation"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "light brightness"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a137dd46-c21d-4d31-bdeb-67a9f527234f",
    "author": "student2020-1",
    "ruleName": "Regola 5",
    "naturalLanguage": "WHEN   Test-user sleep duration becomes  more then  480  and  Bedroom Light state is  off  ,  do start activating light scene in the bedroom, send  reminder  by voice",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-12-52-22-217",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "480",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Sleep Duration",
          "realName": "sleepDuration",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/activity/sleep/@sleepDuration",
          "dimensionId": 1
        },
        "blockcomposer-type": "sleep-sleepDuration"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Activate",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Work-time"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3e87374f-0aa9-4f37-8ce4-679fd45c340e",
    "author": "student2020-2",
    "ruleName": "Regola1",
    "naturalLanguage": "When  Fridge door becomes  open  ,  do send  one  reminder  by voice",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "23-10-2020-18-37-40-341",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ci sono i prodotti che stanno per scadere\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "cf2f05d0-e2a6-4863-bb56-1fa9f5bd75e3",
    "author": "student2020-2",
    "ruleName": "Regola2",
    "naturalLanguage": "if Propafenone has not been taken    between 07:00 and 07:45 ,  do send  alarm  by sms to 1234567",
    "priority": "1",
    "goal": "safety",
    "timestamp": "9-1-2021-11-32-29-357",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "07:00",
          "07:45"
        ],
        "isNot": true,
        "value": "medicina",
        "element": {
          "displayedName": "Medicine Taken",
          "realName": "medicationName",
          "triggerType": "both",
          "type": "STRING",
          "unit": "",
          "xPath": "user/activity/@medicationName",
          "dimensionId": 1
        },
        "blockcomposer-type": "activity-medicationName"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"La medicina non è stata presa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "123456"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "27ea6e0a-0d29-4667-b630-16ec2560949d",
    "author": "student2020-2",
    "ruleName": "Regola3",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "25-10-2020-11-17-17-838",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "microwave-door",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "microwave-door",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Alarms",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"alarm text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Alarms",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"La cottura non è ultimata\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Cooker"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "18d85fc7-dc29-4d46-ba47-aeb358bc5d52",
    "author": "student2020-2",
    "naturalLanguage": "if  Weather & Time outdoor temperature is  less then  2  and  Bathroom Light temperature is  11 ,  do  turn on the   Bathroom Light",
    "ruleName": "Regola4",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "25-10-2020-11-27-36-671",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-temperature",
        "operator": "EQUAL",
        "parent": "",
        "value": "0",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorTemperature"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light bathroom",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "11",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - Temperature",
          "realName": "temperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@temperature",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-temperature"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light bathroom",
          "xPath": "applianceState/Bathroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bathroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "30",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "12ce6379-92c3-4a2d-8e60-bf7eb071b626",
    "author": "student2020-2",
    "ruleName": "Regola5",
    "naturalLanguage": "if  Test-user heart rate is  more then  100  and  Test-user vocal emotional state is  sad  ,  do start relaxing light scene, send  reminder  by voice",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "25-10-2020-11-31-43-669",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "cognitive-vocalEmotionalState",
        "operator": "EQUAL",
        "parent": "",
        "value": "100",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Heart Rate",
          "realName": "heartRate",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@heartRate",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-heartRate"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "",
        "value": "SAD",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Vocal Emotional State",
          "possibleValues": {
            "BORED": "Bored",
            "HAPPY": "Happy",
            "AMUSED": "Amused",
            "WORRIED": "Worried",
            "SAD": "Sad",
            "SERENE": "Serene",
            "ANGRY": "Angry",
            "ENTHUSIAST": "Enthusiast"
          },
          "realName": "vocalEmotionalState",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/cognitive/@vocalEmotionalState",
          "dimensionId": 1
        },
        "blockcomposer-type": "cognitive-vocalEmotionalState"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Adesso rilassati\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d01b54a3-1651-45c4-b590-3b1b6f115d4d",
    "author": "student2020-3",
    "naturalLanguage": "When  Entrance Light state becomes  on  ,  do send  alarm  by voice",
    "ruleName": "Regola 1",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "24-10-2020-21-25-42-591",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Welcome home\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "71868a3f-fdc7-4b5a-b725-7fa5af859897",
    "author": "student2020-3",
    "ruleName": "Regola 2",
    "naturalLanguage": "If  Test-user training time  does  not  become  more then  0.5   between 07:00 and 18:00 ,  do send  alarm  by voice, start activating light scene",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "24-10-2020-21-29-13-753",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "MORETHEN",
        "parent": "",
        "value": "0.5",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "07:00",
          "18:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Training Time",
          "realName": "trainingTime",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/cognitive/@trainingTime",
          "dimensionId": 1
        },
        "blockcomposer-type": "cognitive-trainingTime"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Activate",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Time for some workout\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "0e8c555f-3f51-46da-b875-6c73d2d1b272",
    "author": "student2020-3",
    "ruleName": "Regola 3",
    "naturalLanguage": " IF  LivingRoom window sensor is  open  and  Weather & Time becomes rain    ,  do send  two  alarms   by sms to ",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "24-10-2020-21-32-53-904",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-rain",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-windowSensor"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Close the window\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c946eb82-e349-4083-ac1d-85c4f4e179be",
    "author": "student2020-3",
    "ruleName": "Regola 4",
    "naturalLanguage": "if  Kitchen temperature is    more then  4  and  Fridge door is    open  ,  do send  alarm  by voice,  turn on all lights in the kitchen",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "24-10-2020-21-24-12-431",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "fridge-door",
        "operator": "MORETHEN",
        "parent": "Kitchen",
        "value": "4",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-temperatureLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Close the fridge door!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "73da8af8-f2d3-4896-845d-60ab520b3bbd",
    "author": "student2020-3",
    "ruleName": "Regola 5",
    "naturalLanguage": " When     Test-user heart rate becomes  more then  100  and  When time is    more then  23:00 minutes and  When time is    lt 07:30 minutes and  When  Bedroom Light state is    off  ,  do send  alarm  by voice, start biorhythm light scene in the bedroom",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "24-10-2020-21-38-9-378",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "MORETHEN",
        "parent": "",
        "value": "100",
        "startGroup": 0,
        "closeGroup": 2,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Heart Rate",
          "realName": "heartRate",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@heartRate",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-heartRate"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "22:30",
          "endTime": "07:30"
        },
        "startGroup": 0,
        "closeGroup": 2,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 2,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "BiorhythmLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Stai bene?\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/Bedroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "84025666-04c0-4857-9de4-1f7762cab149",
    "author": "student2020-4",
    "ruleName": "regola1",
    "priority": "1",
    "goal": "safety",
    "timestamp": "22-10-2020-19-9-55-729",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"reminder text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "ab1575f3-ae88-4a74-a29e-d8409ca307a2",
    "author": "student2020-4",
    "ruleName": "regola2",
    "priority": "1",
    "goal": "comfort",
    "timestamp": "22-10-2020-19-4-35-660",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "25",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "13:00",
          "22:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "LivingRoom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Aggiustare temperatura salotto\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4a2c4edf-70a6-4095-bb46-e31157214618",
    "author": "student2020-4",
    "ruleName": "regola3",
    "priority": 1,
    "goal": "safety",
    "timestamp": "23-10-2020-0-31-1-159",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-smokeSensor",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-smokeSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"reminder text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "everyone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f96e3552-465b-4689-baa5-a9f4cf30f275",
    "author": "student2020-4",
    "ruleName": "regola4",
    "priority": "1",
    "goal": "safety",
    "timestamp": "23-10-2020-1-8-16-440",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "greatLuminaire-state",
        "operator": "EQUAL",
        "parent": "",
        "value": "FOG",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Great Luminaire",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Great Luminaire - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 8
        },
        "blockcomposer-type": "greatLuminaire-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"alarm text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/All/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "42376ba2-e23a-497c-8903-ab47d367553a",
    "author": "student2020-4",
    "ruleName": "regola5",
    "naturalLanguage": "if  Test-user   is  inside  entrance and  Entrance Light state is   not   on   between 16:00 and 06:00 ,  do  turn on all lights in the entrance, send  one  reminder  by voice",
    "priority": 1,
    "goal": "safety",
    "timestamp": "23-10-2020-16-59-3-311",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entranceLight-state",
        "operator": "INSIDE",
        "parent": "",
        "value": "ENTRANCE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "16:00",
          "06:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Qualcuno all'ingresso\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "dd3e446e-ea09-4edd-a780-f0611307d2c8",
    "author": "student2020-5",
    "ruleName": "Regola 1",
    "naturalLanguage": "When  Fridge door becomes  open  ,  do send  one  reminder  by voice",
    "priority": "1",
    "goal": "wellbeing",
    "timestamp": "16-10-2020-12-39-47-904",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Controllare la scadenza del latte"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c67dab1b-a799-4dce-b705-61178fb06b66",
    "author": "student2020-5",
    "ruleName": "Regola 2",
    "naturalLanguage": "if  Test-user   is  not  inside  house between 08:00 and 20:00  ,  do  turn off all lights in the house, send  one  alarm  by notification",
    "priority": 1,
    "goal": "safety",
    "timestamp": "24-10-2020-10-10-11-749",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "INSIDE",
        "parent": "",
        "value": "HOUSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "08:00",
          "20:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Type of Proximity",
          "realName": "typeOfProximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Ho spento tutte le luci di casa\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "89e51888-9138-4775-a3b3-84cb5959c4d2",
    "author": "student2020-5",
    "ruleName": "Regola 3",
    "naturalLanguage": " WHEN   Weather & Time becomes rain    and time is  less then  08:15 minutes ,  do send  one  reminder  by notification",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "22-10-2020-16-54-3-773",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "00:00",
          "endTime": "08:15"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ricordati di prendere l'ombrello\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "+39335491242"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f769a205-6ee9-4ad2-aa67-9a978d0f8630",
    "author": "student2020-5",
    "ruleName": "Regola 4",
    "naturalLanguage": " WHEN   Kitchen smoke sensor becomes  active    and  Kitchen window sensor is  close  ,  do send  three  alarms   by voice,  turn on all lights in the house",
    "priority": "1",
    "goal": "safety",
    "timestamp": "19-10-2020-17-31-2-692",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-windowSensor",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-smokeSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "alarm text"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "7994ea01-7763-4b85-9d50-219f6f7630c8",
    "author": "student2020-5",
    "ruleName": "Regola 5",
    "naturalLanguage": " WHEN   Test-user sleep duration becomes  more then  15  and  Bedroom Light state is  on  ,  do  turn off all lights in the bedroom, send  one  reminder  by mail to miamail@provider.it",
    "priority": "1",
    "goal": "safety",
    "timestamp": "19-10-2020-17-34-50-500",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "15",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Sleep Duration",
          "realName": "sleepDuration",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/activity/sleep/@sleepDuration",
          "dimensionId": 1
        },
        "blockcomposer-type": "sleep-sleepDuration"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Anche oggi ti sei addormentato con la luce accesa..."
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "EMAIL"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "miamail@provider.it"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8954a617-90b2-4c33-8897-810e44570ac3",
    "author": "student2020-6",
    "ruleName": "Fridge Door",
	"naturalLanguage": "when  Fridge door become  open  ,  do send  reminder  by notification",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-11-19-23-850",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Non tenere la porta del frigorifero aperta più del necessario"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "62616b7b-76f1-4e06-a071-c5bf92ed10ab",
    "author": "student2020-6",
    "ruleName": "Bathroom Lights",
	"naturalLanguage": "if  Bathroom light level is   not   no light   between 00:00 and 07:00 ,  do send  one  alarm  by notification,  turn off all lights in the bathroom",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "18-10-2020-11-14-49-404",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:00",
          "07:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bathroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "You left the lights turn on in the bathroom....again Charles. I took care of it"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c4ae619c-7991-4817-8d08-113d66e208b5",
    "author": "student2020-6",
    "ruleName": "Rain + Windows",
	"naturalLanguage": " WHEN   Weather & Time becomes rain    and  LivingRoom window sensor is  open  ,  do send  one  reminder  by sms to Me",
    "priority": 1,
    "goal": "safety",
    "timestamp": "18-10-2020-11-23-13-644",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-windowSensor",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Charles, has just started raining, you should close the windows in the livingroom"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c34b77c6-60ac-4799-8589-d5c8aa9717a5",
    "author": "student2020-6",
    "ruleName": "Not Ubiquity",
	"naturalLanguage": "if  Kitchen noise level is  more then  1  and  Bedroom Portable Light state is  on  ,  do send  one  alarm  by voice,  turn off all lights in the bedroom",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "23-10-2020-16-13-4-473",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomPortableLight-state",
        "operator": "MORETHEN",
        "parent": "Kitchen",
        "value": "1",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Noise Level",
          "realName": "noiseLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@noiseLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-noiseLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bedroom Portable Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Portable Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 12
        },
        "blockcomposer-type": "bedroomPortableLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"I'm pretty sure you don't need the lights turn on in your bedroom right now Charles\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "52fe7593-a3bb-4724-8748-6e71c20af1e9",
    "author": "student2020-6",
    "ruleName": "Help Charles with cookies",
	"naturalLanguage": " WHEN  time inside kitchen becomes  more then  1 minutes and  Kitchen Light state is  off  ,  do  turn on all lights in the kitchen, send  one  reminder  by voice",
    "priority": 1,
    "goal": "safety",
    "timestamp": "23-10-2020-16-16-12-702",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchenLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "1",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Kitchen",
          "possibleValues": "1",
          "realName": "timeInsideKitchen",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideKitchen",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideKitchen"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"I took the liberty of turning the lights on Charles. You are quiet short-sighted though\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b6bb0f38-4c8a-4bdb-be5a-5174955ae28c",
    "author": "student2020-7",
	"naturalLanguage": "When  Fridge door becomes  open  ,  do send  one  reminder  by voice",
    "ruleName": "Frigo",
    "priority": "1",
    "goal": "health",
    "timestamp": "19-10-2020-10-43-45-973",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Chiudi il frigo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "messaggio vocale in casa"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "810a2041-32d7-456a-a41d-1660b3145ce1",
    "author": "student2020-7",
    "ruleName": "Porte Aperte",
	"naturalLanguage": "If  Entrance door sensor  does  not  become  close   between 07:00 and 15:00 ,  do send  three  alarms   by notification",
    "priority": "1",
    "goal": "comfort",
    "timestamp": "17-10-2020-11-7-34-859",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "07:00",
          "15:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Entrance - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Attenzione porte aperte"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a6fffd09-2fa2-432f-a24b-a303ad2eb43c",
    "author": "student2020-7",
    "ruleName": "Gas acceso",
    "priority": "1",
    "goal": "safety",
    "timestamp": "17-10-2020-11-26-50-12",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "kitchen-temperatureLevel",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "Reminders",
        "operator": "MORETHEN",
        "parent": "Kitchen",
        "value": "25",
        "startGroup": 1,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Spengi il gas"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "5d9c86d9-1191-4812-9854-3c580980266e",
    "author": "student2020-7",
    "ruleName": "cibo bruciato",
	"naturalLanguage": "if  Kitchen smoke sensor is  active    and  Microwave door is  close  ,  do send  one  alarm  by SMS",
    "priority": "1",
    "goal": "safety",
    "timestamp": "17-10-2020-11-52-25-715",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "microwave-door",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-smokeSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "E' bruciato il cibo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to 3913287005"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "96de6748-023e-47c3-9d30-9cf2d229962c",
    "author": "student2020-7",
    "ruleName": "Compleanno!",
	"naturalLanguage": " WHEN   Test-user bed occupancy  does  not  become  out   on 28-02-2021 between 07:00 and 07:45 and  Bedroom Light state is  off  ,  do send  reminder  by voice,  turn on all lights in the bedroom",
    "priority": "1",
    "goal": "wellbeing",
    "timestamp": "19-10-2020-9-59-53-878",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": "25",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Age",
          "realName": "age",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/personalData/@age",
          "dimensionId": 1
        },
        "blockcomposer-type": "personalData-age"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "07:00",
          "07:45"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Buon Compleanno!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to 3913287005"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3babc39c-0d72-4164-a9d7-574811379bd5",
    "author": "student2020-8",
    "ruleName": "REgola1",
    "priority": 1,
    "goal": "none",
    "timestamp": "23-10-2020-15-14-44-490",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Chiudere lo sportello del frigo\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f1155ab6-efa4-4c3b-8092-d246e10c2e94",
    "author": "student2020-8",
    "ruleName": "Regola2",
	"naturalLanguage": "if  Microwave door is  not  close     between 08:30 and 12:00 ,  do send one alarm by SMS",
    "priority": 1,
    "goal": "none",
    "timestamp": "23-10-2020-15-17-18-61",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "08:30",
          "12:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Sportello microonde aprto!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "05563d27-ee09-45ac-b04e-d68000d85ef7",
    "author": "student2020-8",
    "ruleName": "Regola3",
	"naturalLanguage": "WHEN the bathroom door sensor becomes open and if bathroom sensor is open, do send a reminder by voice",
    "priority": 1,
    "goal": "none",
    "timestamp": "23-10-2020-15-33-13-546",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroom-doorSensor",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-doorSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "bathroom-doorSensor",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-doorSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Chiudere porta bagno!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3d44bc55-492b-47a0-966e-6b4c87005b92",
    "author": "student2020-8",
    "ruleName": "Regola4",
	"naturalLanguage": "IF Weather & Time wind is more than 5 and corridor temperature become less than 18, do send a reminder by voice",
    "priority": 1,
    "goal": "none",
    "timestamp": "23-10-2020-16-10-47-777",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "corridor-temperatureLevel",
        "operator": "MORETHEN",
        "parent": "",
        "value": "5",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Wind",
          "realName": "wind",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@wind",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-wind"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "LESSTHEN",
        "parent": "Corridor",
        "value": "18",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 7
        },
        "blockcomposer-type": "corridor-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"alarm text\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "ff00953a-8558-40e1-9a67-fef83416b488",
    "author": "student2020-8",
    "ruleName": "Regola5",
	"naturalLanguage": "When time inside bathroom becomes more than 10 minutes and bathroom light state is off, do send an alarm by voice, send a notification by SMS",
    "priority": 1,
    "goal": "none",
    "timestamp": "23-10-2020-16-46-41-922",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "10",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bathroom",
          "possibleValues": "10",
          "realName": "timeInsideBathroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBathroom"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Luce bagno accesa da troppo\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Reminders",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"Qualcuno sta male in bagno\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "78206a21-cf1f-47b4-9d59-01111fb75031",
    "author": "student2020-9",
    "ruleName": "if microwave door is open , do send one reminder by sms to me.",
	"naturalLanguage": "if microwave door is open , do send one reminder by sms to me.",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-9-2-8",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricordati di non lasciare lo sportello aperto"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a8f0fba9-8035-4d44-8935-35e5d6ac4c2f",
    "author": "student2020-9",
    "ruleName": "turn off the light (not)",
	"naturalLanguage": "if  Corridor Light Strip state is   not   off   between 23:57 and 06:57 ,  do send  two  alarms   by sms to me,  turn off all lights in the corridor",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-26-23-749",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Corridor Light Strip",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "23:57",
          "06:57"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Corridor Light Strip - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 13
        },
        "blockcomposer-type": "corridorLightStrip-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "spegni le luci"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Corridor/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "7fe54200-4c74-45e3-9d7a-07cd3dc53db3",
    "author": "student2020-9",
    "ruleName": "Snow if outdoor temperature is less then 0. Send sms to Laura",
	"naturalLanguage": " WHEN   Weather & Time becomes snow    and  Weather & Time outdoor temperature is  less then  0  ,  do send  reminder  by sms to Laura",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-33-2-922",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-outdoorTemperature",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Snow",
          "realName": "snow",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@snow",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-snow"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "",
        "value": "0",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorTemperature"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "sta nevicando!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Laura"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "ba2dd0cc-033d-4110-9aa8-c024163994fd",
    "author": "student2020-9",
    "ruleName": "quarta regola",
	"naturalLanguage": "if time is    10:00 minutes and  Kitchen Light state is    on  ,  do send  two  alarms   by voice,  turn off all lights in the kitchen",
    "priority": 1,
    "goal": "none",
    "timestamp": "19-10-2020-16-30-3-781",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchenLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "10:00",
          "endTime": "10:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "luci accese"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c7a78444-787b-4389-8507-5edfaa7146e1",
    "author": "student2020-9",
    "ruleName": "Order to turn the light on",
	"naturalLanguage": "IF  Bathroom Light state is    off  and  When  Test-user vocal sentence becomes  turn on light in bathroom color white  ,  do  turn on all lights in the bathroom, send  one  reminder  by voice",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-51-46-967",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "vocalInput-vocalString",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "",
        "value": "TURN_ON_LIGHT_IN_BATHROOM_COLOR_WHITE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Vocal Sentence",
          "possibleValues": {
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_ACTIVATING": "Turn-On Corridor Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_WHITE": "Turn-On Entrance Light with White Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_WHITE": "Turn-On Livingroom Light with White Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_WHITE": "Turn-On Kitchen Light with White Color",
            "TURN_OFF_LIGHT_IN_BEDROOM": "Turn-Off Bedroom Light",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_ACTIVATING": "Turn-On Kitchen Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_RED": "Turn-On Entrance Light with White Red",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_GREEN": "Turn-On Bathroom Light with White Color",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_BIORHYTHM": "Turn-On Entrance Light with Activating Scene",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_YELLOW": "Turn-On Bedroom Light with Yellow Color",
            "TURN_OFF_LIGHT_IN_ENTRANCE": "Turn-Off Entrance Light",
            "TURN_ON_LIGHT_IN_LIVING_ROOM": "Turn-On Livingroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_RED": "Turn-On Bedroom Light with White Red",
            "TURN_OFF_LIGHT_IN_CORRIDOR": "Turn-Off Corridor Light",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_RELAXING": "Turn-On Entrance Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_BIORHYTHM": "Turn-On Bathroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_YELLOW": "Turn-On Entrance Light with Yellow Color",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_BLUE": "Turn-On Bedroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_BIORHYTHM": "Turn-On Kitchen Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_BIORHYTHM": "Turn-On Bedroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_WHITE": "Turn-On Bathroom Light with White Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_BLUE": "Turn-On Kitchen Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_ACTIVATING": "Turn-On Bathroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_RELAXING": "Turn-On Kitchen Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_GREEN": "Turn-On Kitchen Light with Green Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_BIORHYTHM": "Turn-On Corridor Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_ACTIVATING": "Turn-On Livingroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_GREEN": "Turn-On Entrance Light with Green Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_YELLOW": "Turn-On Livingroom Light with Yellow Color",
            "TURN_OFF_LIGHT_IN_BATHROOM": "Turn-Off Bathroom Light",
            "TURN_ON_LIGHT_IN_ENTRANCE": "Turn-On Entrance Light",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_YELLOW": "Turn-On Kitchen Light with Yellow Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_YELLOW": "Turn-On Corridor Light with Yellow Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_BLUE": "Turn-On Livingroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_GREEN": "Turn-On Livingroom Light with Green Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_RELAXING": "Turn-On Livingroom Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_ACTIVATING": "Turn-On Entrance Light with Activating Scene",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_BIORHYTHM": "Turn-On Livingroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_BLUE": "Turn-On Bathroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM": "Turn-On Bathroom Light",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_GREEN": "Turn-On Corridor Light with Green Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_RED": "Turn-On Kitchen Light with Yellow Red",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_BLUE": "Turn-On Entrance Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_RELAXING": "Turn-On Bathroom Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_RED": "Turn-On Corridor Light with Yellow Red",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_RED": "Turn-On Bathroom Light with Red Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_WHITE": "Turn-On Corridor Light with Yellow White",
            "TURN_ON_LIGHT_IN_CORRIDOR": "Turn-On Corridor Light",
            "TURN_ON_LIGHT_IN_BEDROOM": "Turn-On Bedroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_ACTIVATING": "Turn-On Bedroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_BLUE": "Turn-On Corridor Light with Yellow Blue",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_YELLOW": "Turn-On Bathroom Light with Yellow Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_RELAXING": "Turn-On Corridor Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_KITCHEN": "Turn-On Kitchen Light",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_RED": "Turn-On Livingroom Light with Red Color",
            "TURN_OFF_LIGHT_IN_LIVING_ROOM": "Turn-Off Livingroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_GREEN": "Turn-On Bedroom Light with Green Color",
            "TURN_OFF_LIGHT_IN_KITCHEN": "Turn-Off Kitchen Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_WHITE": "Turn-On Bedroom Light with White Color",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_RELAXING": "Turn-On Bedroom Light with Relaxing Scene"
          },
          "realName": "vocalString",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/vocalInput/@vocalString",
          "dimensionId": 1
        },
        "blockcomposer-type": "vocalInput-vocalString"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricordati di accendere la luce in bagno"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "af1dee69-74a9-4d8e-88bd-13a8c9f166f4",
    "author": "student2020-10",
    "ruleName": "Regola1",
	"naturalLanguage": "When the gas sensor in the kitchen is activated, sends three reminders by voice",
    "priority": 1,
    "goal": "none",
    "timestamp": "23-10-2020-10-51-12-390",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"il sensore del gas è acceso!»\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "87b6eb4e-d5de-4bbd-af2a-955fc471cece",
    "author": "student2020-10",
    "ruleName": "Regola2",
	"naturalLanguage": "if the corridor light strip status is not deactivated between 22:00 and 08:00, send the alarm by sms to 33334444111, turn on the entrance light and set the color to red for 5 minutes", 
    "priority": 1,
    "goal": "safety",
    "timestamp": "21-10-2020-15-28-41-277",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Corridor Light Strip",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:00",
          "07:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Corridor Light Strip - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 13
        },
        "blockcomposer-type": "corridorLightStrip-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light Entrance",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Attenzione, le luci nel corridoio sono accese, ricordati di spegnerle!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "3331234123"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Hue color light Entrance",
          "xPath": "applianceState/Entrance/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Entrance",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "5",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8d8b2346-f0ce-4e0b-b139-5f0cf123fdad",
    "author": "student2020-10",
    "ruleName": "Regola3",
	"naturalLanguage": "When  Weather & Time becomes snow    or  Weather & Time outdoor temperature becomes  0  ,  do send  reminder  by mail to mario.rossi@mail.it",
    "priority": 1,
    "goal": "safety",
    "timestamp": "21-10-2020-15-30-7-276",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "or",
        "nextElement": "twentyFourHoursWeatherForecast-outdoorTemperature",
        "operator": "EQUAL",
        "parent": "",
        "value": "SNOW",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/twentyFourHoursWeatherForecast/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "twentyFourHoursWeatherForecast-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "value": "0",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/twentyFourHoursWeatherForecast/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "twentyFourHoursWeatherForecast-outdoorTemperature"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Domani è prevista neve, ricordati di montare le catene!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "EMAIL"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "mario.rossi@mail.com"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d1dde5e1-4fd1-4990-a19c-09fca9177df3",
    "author": "student2020-10",
    "ruleName": "Regola4",
	"naturalLanguage" : "When the front door sensor opens or the entrance light status turns on, send the alarm by voice, turn on all the lights in the house",
    "priority": 1,
    "goal": "safety",
    "timestamp": "21-10-2020-15-32-9-440",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "or",
        "nextElement": "entranceLight-state",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorSensor"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Attenzione! La luce dell'ingresso è accesa e il sensore della porta sono attivi"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "6e205e9f-5b16-4613-8be9-f404de84639f",
    "author": "student2020-10",
    "ruleName": "Regola5",
	"naturalLanguage": "WHEN the test user's bed occupation becomes active and the bedroom lighting state is off, send three voice reminders, turn on all the lights in the bedroom",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "21-10-2020-15-33-45-396",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": "IN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bed Occupancy",
          "possibleValues": {
            "IN": "In",
            "OUT": "Out"
          },
          "realName": "bedOccuppancy",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/activity/sleep/@bedOccuppancy",
          "dimensionId": 1
        },
        "blockcomposer-type": "sleep-bedOccuppancy"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Fra 5 minuti suona la sveglia"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "87f16af0-0f9f-4380-8dc2-0a7ca3ccd2bb",
    "author": "student2020-11",
    "ruleName": "send alarm for open fridge door",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-9-6-150",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricordati di non lasciare il frigo aperto"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "00517cf9-84a2-4cea-a0ba-2c7d190412e9",
    "author": "student2020-11",
    "ruleName": "Turn the lights off",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-26-19-185",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "21:00",
          "07:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Hai lasciato la luce spenta in cucina"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "fb6607a4-1870-4dee-880f-9c7cc4e335db",
    "author": "student2020-11",
    "ruleName": "Send reminder to Sorella",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-32-50-778",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Snow",
          "realName": "snow",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@snow",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-snow"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "14:00",
          "endTime": "14:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Sta nevicando! Niente beach volley oggi alle 14.20"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Sorella"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d71a450c-c41a-44ae-a64b-608173c6fb48",
    "author": "student2020-11",
    "ruleName": "turn on the light if 17 pm",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-44-3-29",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "17:00",
          "endTime": "17:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "La luce in salotto è ancora spenta!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "2229d546-182b-4d82-aea4-9882bb033c3b",
    "author": "student2020-11",
    "ruleName": "Turn the bathroom lights off",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-15-50-37-615",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "vocalInput-vocalString",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "",
        "value": "TURN_OFF_LIGHT_IN_BATHROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Vocal Sentence",
          "possibleValues": {
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_ACTIVATING": "Turn-On Corridor Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_WHITE": "Turn-On Entrance Light with White Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_WHITE": "Turn-On Livingroom Light with White Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_WHITE": "Turn-On Kitchen Light with White Color",
            "TURN_OFF_LIGHT_IN_BEDROOM": "Turn-Off Bedroom Light",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_ACTIVATING": "Turn-On Kitchen Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_RED": "Turn-On Entrance Light with White Red",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_GREEN": "Turn-On Bathroom Light with White Color",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_BIORHYTHM": "Turn-On Entrance Light with Activating Scene",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_YELLOW": "Turn-On Bedroom Light with Yellow Color",
            "TURN_OFF_LIGHT_IN_ENTRANCE": "Turn-Off Entrance Light",
            "TURN_ON_LIGHT_IN_LIVING_ROOM": "Turn-On Livingroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_RED": "Turn-On Bedroom Light with White Red",
            "TURN_OFF_LIGHT_IN_CORRIDOR": "Turn-Off Corridor Light",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_RELAXING": "Turn-On Entrance Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_BIORHYTHM": "Turn-On Bathroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_YELLOW": "Turn-On Entrance Light with Yellow Color",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_BLUE": "Turn-On Bedroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_BIORHYTHM": "Turn-On Kitchen Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_BIORHYTHM": "Turn-On Bedroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_WHITE": "Turn-On Bathroom Light with White Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_BLUE": "Turn-On Kitchen Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_ACTIVATING": "Turn-On Bathroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_KITCHEN_SCENE_RELAXING": "Turn-On Kitchen Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_GREEN": "Turn-On Kitchen Light with Green Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_BIORHYTHM": "Turn-On Corridor Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_ACTIVATING": "Turn-On Livingroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_GREEN": "Turn-On Entrance Light with Green Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_YELLOW": "Turn-On Livingroom Light with Yellow Color",
            "TURN_OFF_LIGHT_IN_BATHROOM": "Turn-Off Bathroom Light",
            "TURN_ON_LIGHT_IN_ENTRANCE": "Turn-On Entrance Light",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_YELLOW": "Turn-On Kitchen Light with Yellow Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_YELLOW": "Turn-On Corridor Light with Yellow Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_BLUE": "Turn-On Livingroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_GREEN": "Turn-On Livingroom Light with Green Color",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_RELAXING": "Turn-On Livingroom Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_ENTRANCE_SCENE_ACTIVATING": "Turn-On Entrance Light with Activating Scene",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_SCENE_BIORHYTHM": "Turn-On Livingroom Light with Biorhythm Scene",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_BLUE": "Turn-On Bathroom Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM": "Turn-On Bathroom Light",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_GREEN": "Turn-On Corridor Light with Green Color",
            "TURN_ON_LIGHT_IN_KITCHEN_COLOR_RED": "Turn-On Kitchen Light with Yellow Red",
            "TURN_ON_LIGHT_IN_ENTRANCE_COLOR_BLUE": "Turn-On Entrance Light with Blue Color",
            "TURN_ON_LIGHT_IN_BATHROOM_SCENE_RELAXING": "Turn-On Bathroom Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_RED": "Turn-On Corridor Light with Yellow Red",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_RED": "Turn-On Bathroom Light with Red Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_WHITE": "Turn-On Corridor Light with Yellow White",
            "TURN_ON_LIGHT_IN_CORRIDOR": "Turn-On Corridor Light",
            "TURN_ON_LIGHT_IN_BEDROOM": "Turn-On Bedroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_ACTIVATING": "Turn-On Bedroom Light with Activating Scene",
            "TURN_ON_LIGHT_IN_CORRIDOR_COLOR_BLUE": "Turn-On Corridor Light with Yellow Blue",
            "TURN_ON_LIGHT_IN_BATHROOM_COLOR_YELLOW": "Turn-On Bathroom Light with Yellow Color",
            "TURN_ON_LIGHT_IN_CORRIDOR_SCENE_RELAXING": "Turn-On Corridor Light with Relaxing Scene",
            "TURN_ON_LIGHT_IN_KITCHEN": "Turn-On Kitchen Light",
            "TURN_ON_LIGHT_IN_LIVING_ROOM_COLOR_RED": "Turn-On Livingroom Light with Red Color",
            "TURN_OFF_LIGHT_IN_LIVING_ROOM": "Turn-Off Livingroom Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_GREEN": "Turn-On Bedroom Light with Green Color",
            "TURN_OFF_LIGHT_IN_KITCHEN": "Turn-Off Kitchen Light",
            "TURN_ON_LIGHT_IN_BEDROOM_COLOR_WHITE": "Turn-On Bedroom Light with White Color",
            "TURN_ON_LIGHT_IN_BEDROOM_SCENE_RELAXING": "Turn-On Bedroom Light with Relaxing Scene"
          },
          "realName": "vocalString",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/vocalInput/@vocalString",
          "dimensionId": 1
        },
        "blockcomposer-type": "vocalInput-vocalString"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricordati di spegnere le luci in bagno"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a99544c2-1637-4cd0-8265-413ca8afa40a",
    "author": "student2020-12",
    "ruleName": "regola 1",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-18-44-38-132",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Corridor",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor - Motion",
          "realName": "motion",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@motion",
          "dimensionId": 7
        },
        "blockcomposer-type": "corridor-motion"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Corridor/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "67b20012-afb2-4068-918b-3442fb2dbf3b",
    "author": "student2020-12",
    "ruleName": "regola 2",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-18-45-38-939",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "00:02",
          "00:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"fai risuonare un bip\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b977ab5e-7580-444d-bda4-b3c67f6ca854",
    "author": "student2020-12",
    "ruleName": "regola 3",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-18-47-25-252",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "physiological-heartRate",
        "operator": "MORETHEN",
        "parent": "",
        "value": "90",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/twentyFourHoursWeatherForecast/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "twentyFourHoursWeatherForecast-outdoorTemperature"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "MORETHEN",
        "parent": "",
        "value": "40",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Heart Rate",
          "realName": "heartRate",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@heartRate",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-heartRate"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"non uscire per footing\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "proprietario di casa"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "32e55ff9-fd68-4917-b380-a39ac2e4747f",
    "author": "student2020-12",
    "ruleName": "regola 4",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-18-48-26-195",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "microwave-door",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Activate",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "\"aziona bip di allarme\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/Kitchen/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "2ad96dfa-b7e4-4011-96e6-8dd32f0a408d",
    "author": "student2020-12",
    "ruleName": "regola 5",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-18-49-12-554",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroom-temperatureLevel",
        "operator": "MORETHEN",
        "parent": "",
        "value": "50",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bathroom",
          "possibleValues": "50",
          "realName": "timeInsideBathroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBathroom"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Activate",
        "operator": "MORETHEN",
        "parent": "Bathroom",
        "value": "30",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/Bathroom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"uscire dal  bagno\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "inquilino"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "90a8be0f-f4ba-4f40-ad21-b15df24160e3",
    "author": "student2020-13",
    "ruleName": "Controllo stato porta frigorifero",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-12-29-15-388",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-doorSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "controlla che la porta del frigorifero sia chiusa"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "2c0e5a8d-378a-40d7-ad77-6734360b0da1",
    "author": "student2020-13",
    "ruleName": "Spegnimento automatico luci bagno",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-12-34-51-818",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "value": "DARK",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "23:00",
          "06:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bathroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Spegnimento delle luci del bagno"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9d469a8c-2992-4d84-ae5d-93f4b4d29863",
    "author": "student2020-13",
    "ruleName": "Controllo meteo",
    "priority": 1,
    "goal": "none",
    "timestamp": "23-10-2020-10-12-25-548",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-outdoorTemperature",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "",
        "value": "5",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorTemperature"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Ricordati l'ombrello e copriti che fuori fa freddo\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "43737060-be2a-43aa-b422-aa0e93d22aea",
    "author": "student2020-13",
    "ruleName": "Risparmio luce",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-12-43-43-672",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-lightLevel",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "DAY_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-lightLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "Kitchen - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "è mattino"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "95e27c0a-cae4-42c6-a019-e973af71c6d8",
    "author": "student2020-13",
    "ruleName": "Controllo temperatura luce camera",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-12-53-3-24",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-temperature",
        "operator": "EQUAL",
        "parent": "",
        "value": "30",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bedroom",
          "possibleValues": "30",
          "realName": "timeInsideBedroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBedroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBedroom"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "MORETHEN",
        "parent": "Bedroom Light",
        "value": "20",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - Temperature",
          "realName": "temperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@temperature",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-temperature"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "La lampadina si sta surriscaldando troppo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "44bdee03-c7e8-4e2a-a554-a88d8a681126",
    "author": "student2020-14",
    "ruleName": "Regola 1",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "16-10-2020-11-6-32-520",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "Bathroom Light",
        "value": "20",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - Brightness",
          "realName": "brightness",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@brightness",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-brightness"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Goditi il relax"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c571d1f5-cb32-4cdd-a821-6718f6d5857a",
    "author": "student2020-14",
    "ruleName": "Regola 2",
    "priority": 1,
    "goal": "health",
    "timestamp": "17-10-2020-9-31-43-993",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "INSIDE",
        "parent": "",
        "value": "HOUSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "09:30",
          "18:30"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ho spento le luci"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a893843d-ac1f-43bd-a596-bc7ff2d5787b",
    "author": "student2020-14",
    "ruleName": "Regola3",
    "priority": 1,
    "goal": "health",
    "timestamp": "17-10-2020-10-30-41-684",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-windowSensor",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Apri la finestra, troppo gas"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "380b253b-4232-42d9-8e50-8cf2d3ad03e9",
    "author": "student2020-14",
    "ruleName": "Regola4",
    "priority": 1,
    "goal": "health",
    "timestamp": "17-10-2020-10-34-8-559",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-state",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "DAY_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "La luce artificiale non serve ora"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "3a8f6042-d858-47f1-a56f-be164b5660c7",
    "author": "student2020-14",
    "ruleName": "Regola5",
    "priority": 1,
    "goal": "health",
    "timestamp": "17-10-2020-10-42-46-272",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "OUTSIDE",
        "parent": "",
        "value": "BEDROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricorda di spegnere la luce!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "223b41e2-eaad-4c47-bdc1-f0fecdd251e5",
    "author": "student2020-15",
    "ruleName": "regola1",
    "priority": 1,
    "goal": "safety",
    "timestamp": "16-10-2020-15-20-16-179",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Chiudi lo sportello del frigo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Myriam"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "87bdd514-0cd0-40e3-9e1f-967bf87d2fe3",
    "author": "student2020-15",
    "ruleName": "regola2",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "16-10-2020-15-30-4-458",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "DAY_LIGHT",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "22:00",
          "00:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bedroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Luci spente"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "myriam"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f2a72957-979f-47f4-a982-2a90cc2a1d11",
    "author": "student2020-15",
    "ruleName": "regola3",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "16-10-2020-15-36-2-370",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entrance-windowSensor",
        "operator": "LESSTHEN",
        "parent": "Entrance",
        "value": "15",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-temperatureLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Accendi i riscaldamenti e chiudi la finestra"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Myriam"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "99098b12-51c4-4a6a-ba4b-c5f2536f4852",
    "author": "student2020-15",
    "ruleName": "regola4",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "16-10-2020-15-42-24-742",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-lightLevel",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "18:00",
          "20:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "LivingRoom - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-windowSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "DARK",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Luci accese"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Myriam"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "70a49e19-82dd-4ca6-a7df-94e431b651b9",
    "author": "student2020-15",
    "ruleName": "regola5",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "16-10-2020-15-46-11-522",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "INSIDE",
        "parent": "",
        "value": "BATHROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light bathroom",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light bathroom",
          "xPath": "applianceState/Bathroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "update:lightColor",
        "value": "#66ffff",
        "duration": "15",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Luce cambiata"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Myriam"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "77ce0957-67cc-4624-b1bc-ccad80039fd5",
    "author": "student2020-16",
    "ruleName": "regola1",
    "priority": "4",
    "goal": "none",
    "timestamp": "19-10-2020-19-20-31-455",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Il frigo è aperto"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "iPhone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "df8a5ab5-51a2-40ee-9275-9b0d3d1709bf",
    "author": "student2020-16",
    "ruleName": "regola2",
    "priority": "6",
    "goal": "wellbeing",
    "timestamp": "17-10-2020-21-55-26-712",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "EQUAL",
        "parent": "",
        "value": "HAPPY",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "Vocal Emotional State",
          "possibleValues": {
            "BORED": "Bored",
            "HAPPY": "Happy",
            "AMUSED": "Amused",
            "WORRIED": "Worried",
            "SAD": "Sad",
            "SERENE": "Serene",
            "ANGRY": "Angry",
            "ENTHUSIAST": "Enthusiast"
          },
          "realName": "vocalEmotionalState",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/cognitive/@vocalEmotionalState",
          "dimensionId": 1
        },
        "blockcomposer-type": "cognitive-vocalEmotionalState"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "00:00",
          "endTime": "23:59"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/all/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "all",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "In mezzo a ogni difficoltà  si trova un'opportunità."
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "iPhone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "0de4d88c-4dc3-43c6-b3a8-86c69dd6ae0c",
    "author": "student2020-16",
    "ruleName": "regola3",
    "priority": "8",
    "goal": "comfort",
    "timestamp": "17-10-2020-22-0-23-136",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroom-temperatureLevel",
        "operator": "LESSTHEN",
        "parent": "",
        "value": "2",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorTemperature"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "LESSTHEN",
        "parent": "Bedroom",
        "value": "8",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-temperatureLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Temperatura bassa in camera da letto"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "iPhone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4548688d-27a2-47ef-8b49-8c86735ffb2f",
    "author": "student2020-16",
    "ruleName": "regola4",
    "priority": "4",
    "goal": "none",
    "timestamp": "19-10-2020-19-21-58-728",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "NORMAL_LIGHT",
        "startGroup": 0,
        "closeGroup": 2,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "09:00",
          "endTime": "16:00"
        },
        "startGroup": 0,
        "closeGroup": 2,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 2,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Livello di luce basso. Accendo le luci"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "iPhone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "b52ecd33-8da1-41d9-8d98-a9403921c8c9",
    "author": "student2020-16",
    "ruleName": "regola5",
    "priority": "7",
    "goal": "safety",
    "timestamp": "17-10-2020-22-6-39-636",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "greatLuminaire-state",
        "operator": "OUTSIDE",
        "parent": "",
        "value": "HOUSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Great Luminaire",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Great Luminaire - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 8
        },
        "blockcomposer-type": "greatLuminaire-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/all/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "All",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Avevi dimenticato le luci accese. Le ho spente"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "iPhone"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "0b6e1f61-37a8-46ae-b564-08a2acab9467",
    "author": "student2020-17",
    "ruleName": "Regola1",
    "priority": "1",
    "goal": "comfort",
    "timestamp": "16-10-2020-17-7-5-439",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Chiudi lo sportello del frigorifero!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a6d6347f-aaf7-40f3-955f-3925aa596f64",
    "author": "student2020-17",
    "ruleName": "Regola2",
    "priority": "1",
    "goal": "comfort",
    "timestamp": "16-10-2020-17-40-29-788",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "DARK",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "18:00",
          "07:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Hai dimenticato la luce accesa in soggiorno! Fai attenzione, ci penso io!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "97fa200c-e40b-4005-934e-f056f3726b10",
    "author": "student2020-17",
    "ruleName": "Regola3",
    "priority": "5",
    "goal": "safety",
    "timestamp": "16-10-2020-18-1-30-463",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-rainQuantity",
        "operator": "EQUAL",
        "parent": "",
        "value": "THUNDERSTORM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "MORETHEN",
        "parent": "",
        "value": "40",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Rain Quantity",
          "realName": "rainQuantity",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@rainQuantity",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rainQuantity"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Stacca le prese e controlla eventuali allagamenti!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "76f3a3b4-8176-41be-9f14-cccda1076bdc",
    "author": "student2020-17",
    "ruleName": "Regola4",
    "priority": "5",
    "goal": "comfort",
    "timestamp": "16-10-2020-18-17-29-597",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-state",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Hai lasciato le luci spente in soggiorno!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/LivingRoom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e82b5429-8ab6-46e7-8cf7-5288457bda54",
    "author": "student2020-17",
    "ruleName": "Regola5",
    "priority": "5",
    "goal": "safety",
    "timestamp": "16-10-2020-18-30-49-685",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "corridorLightStrip-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "65",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Age",
          "realName": "age",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/personalData/@age",
          "dimensionId": 1
        },
        "blockcomposer-type": "personalData-age"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Corridor Light Strip",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor Light Strip - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 13
        },
        "blockcomposer-type": "corridorLightStrip-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "La striscia luminosa in corridoio si è spenta, fa attenzione!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Corridor/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "c2484597-0465-4170-9113-b1687feba6c3",
    "author": "student2020-18",
    "ruleName": "regola1",
    "priority": 1,
    "goal": "safety",
    "timestamp": "19-10-2020-16-30-58-380",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Lo sportello del microonde è aperto!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "03adea31-6ed3-4bc7-a1a3-fe23f0f95986",
    "author": "student2020-18",
    "ruleName": "regola2",
    "priority": 1,
    "goal": "safety",
    "timestamp": "19-10-2020-16-31-40-178",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Corridor",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "value": "true",
        "element": {
          "displayedName": "Corridor - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 7
        },
        "blockcomposer-type": "corridor-smokeSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Corridor-Light Strip Corridor",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Attenzione! Sensore fumo del corridoio non attivo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "333123456"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Corridor-Light Strip Corridor",
          "xPath": "applianceState/Corridor/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#000099",
        "duration": "10",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8e1de6c7-d722-4f2b-9774-7c14ad405b37",
    "author": "student2020-18",
    "ruleName": "regola3",
    "priority": 1,
    "goal": "health",
    "timestamp": "19-10-2020-16-32-37-733",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-outdoorPressure",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "MORETHEN",
        "parent": "",
        "value": "50",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Pressure",
          "realName": "outdoorPressure",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorPressure",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorPressure"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Evita di uscire oggi!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8d5d5944-a76c-4510-bfdb-4838e8674da3",
    "author": "student2020-18",
    "ruleName": "regola4",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "19-10-2020-16-34-59-958",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entranceLight-state",
        "operator": "MORETHEN",
        "parent": "Entrance",
        "value": "0",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance - Noise Level",
          "realName": "noiseLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@noiseLevel",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-noiseLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Percepito rumore all'ingresso!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "aad9f8b8-87cb-49a2-8d1d-de7b9316a885",
    "author": "student2020-18",
    "ruleName": "regola5",
    "priority": 1,
    "goal": "comfort",
    "timestamp": "19-10-2020-16-35-33-820",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomPortableLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "600",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Sleep Duration",
          "realName": "sleepDuration",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/activity/sleep/@sleepDuration",
          "dimensionId": 1
        },
        "blockcomposer-type": "sleep-sleepDuration"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom Portable Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Portable Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 12
        },
        "blockcomposer-type": "bedroomPortableLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "E' ora di alzarsi dal letto!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9457edfe-9c00-4fbd-9e6d-c048e3480066",
    "author": "student2020-19",
    "ruleName": "Regola1",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-13-15-24-422",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Qualcuno sta entrando!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Camilla"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9df6f0b7-7b6b-44e2-99f1-91d16e3609aa",
    "author": "student2020-19",
    "ruleName": "Regola2",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-21-36-41-87",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "01:00",
          "05:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Entrance - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Porta aperta"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Camilla"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9adb84c4-9fd1-49c8-ab9f-3aa9493d070e",
    "author": "student2020-19",
    "ruleName": "Regola3",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-20-6-56-724",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-gasSensor",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-lightLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "value": "true",
        "element": {
          "displayedName": "Kitchen - Gas Sensor",
          "realName": "gasSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@gasSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-gasSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Attenzione, fornelli accesi!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Camilla"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "72fa6809-ff66-44ba-b118-bdc79fce603a",
    "author": "student2020-19",
    "ruleName": "Regola4",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-20-11-31-108",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchenLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "20:00",
          "endTime": "21:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "è ora di cena"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Camilla"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Kitchen/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Kitchen",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d350592e-c8c1-42fb-95f8-6312e11f7dae",
    "author": "student2020-19",
    "ruleName": "Regola5",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-20-13-43-356",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "INSIDE",
        "parent": "",
        "value": "BATHROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricorda di spegnere la luce quando esci dal bagno"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Camilla"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "faeaaca5-a9dd-4940-bac1-ce554af61501",
    "author": "student2020-20",
    "ruleName": "Regola 1",
    "priority": 1,
    "goal": "safety",
    "timestamp": "20-10-2020-16-46-9-415",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Lo sportello del frigorifero è aperto"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "2d71e9da-38c0-41f7-870a-53143a6a857c",
    "author": "student2020-20",
    "ruleName": "Regola 2",
    "priority": 1,
    "goal": "health",
    "timestamp": "20-10-2020-17-15-15-678",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "MORETHEN",
        "parent": "",
        "value": "1999",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "08:00",
          "18:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Steps",
          "realName": "steps",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@steps",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-steps"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Activate",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Il tuo limite dei passi giornalieri non è stato raggiunto"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "Activating Scene",
          "realName": "Activate",
          "xPath": "applianceState/All/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "Activate",
        "timing": "extended",
        "parent": "All",
        "nextElement": "none",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8a4e3a06-dd38-4306-b96e-67f390f04bec",
    "author": "student2020-20",
    "ruleName": "Regola 3",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "20-10-2020-18-2-58-242",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "currentWeather-rain",
        "operator": "LESSTHEN",
        "parent": "",
        "value": "16",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Temperature",
          "realName": "outdoorTemperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorTemperature",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorTemperature"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "value": "true",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Prendi ombrello e la sciarpa"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "8130fbcc-ac90-4d9b-b346-510dff298de2",
    "author": "student2020-20",
    "ruleName": "Regola 4",
    "priority": 1,
    "goal": "safety",
    "timestamp": "20-10-2020-17-41-46-325",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "or",
        "nextElement": "personalData-age",
        "operator": "EQUAL",
        "parent": "",
        "value": "MEMORY_LOSSES_ASSOCIATED_WITH_AGE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Cognitive State",
          "possibleValues": {
            "EXPERT": "Expert",
            "MILD_COGNITIVE_IMPAIRMENT": "Mild Cognitive Impairment",
            "MODERATE_COGNITIVE_IMPAIRMENT": "Moderate Cognitive Impairment",
            "MEMORY_LOSSES_ASSOCIATED_WITH_AGE": "Memory Losses Associated with Age"
          },
          "realName": "cognitiveState",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/cognitive/@cognitiveState",
          "dimensionId": 1
        },
        "blockcomposer-type": "cognitive-cognitiveState"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "MORETHEN",
        "parent": "",
        "value": "70",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Age",
          "possibleValues": "70",
          "realName": "age",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/personalData/@age",
          "dimensionId": 1
        },
        "blockcomposer-type": "personalData-age"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Ricorda di controllare se la finestra del bagno è chiusa"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9702c921-2b60-4eb9-9e10-7f3a8115a9eb",
    "author": "student2020-20",
    "ruleName": "Regola 5",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "20-10-2020-17-54-23-365",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "cognitive-vocalEmotionalState",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "DAY_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "",
        "value": "ANGRY",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Vocal Emotional State",
          "possibleValues": {
            "BORED": "Bored",
            "HAPPY": "Happy",
            "AMUSED": "Amused",
            "WORRIED": "Worried",
            "SAD": "Sad",
            "SERENE": "Serene",
            "ANGRY": "Angry",
            "ENTHUSIAST": "Enthusiast"
          },
          "realName": "vocalEmotionalState",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/cognitive/@vocalEmotionalState",
          "dimensionId": 1
        },
        "blockcomposer-type": "cognitive-vocalEmotionalState"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Ricorda di fare delle pause e di rilassarti"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "User"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d6b4b1fd-9984-47bd-ac7c-14c0728240ec",
    "author": "student2020-21",
    "ruleName": "regola1",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-12-17-40-940",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "Reminders",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "reminder text"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "user"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f37da45e-cf7a-443c-a2d0-56e64d73fc30",
    "author": "student2020-21",
    "ruleName": "regola2",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-12-54-44-15",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Hue color light bedroom",
        "operator": "EQUAL",
        "parent": "",
        "value": "60",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "10:00",
          "12:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Heart Rate",
          "possibleValues": "60",
          "realName": "heartRate",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@heartRate",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-heartRate"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "Alarms",
        "type": "update:lightColor",
        "value": "#ff0000",
        "duration": "2",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "alarm text"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "6fd3a03e-7e2d-4a21-af76-52d7f9fc09b6",
    "author": "student2020-21",
    "ruleName": "regola3",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-12-59-54-679",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-windowSensor",
        "operator": "EQUAL",
        "parent": "",
        "value": "RAIN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "Reminders",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "reminder text"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4c6d2b24-e524-4cd4-9c8d-c226dfafdfff",
    "author": "student2020-21",
    "ruleName": "regola4",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-13-5-3-110",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroom-lightLevel",
        "operator": "LESSTHEN",
        "parent": "Bathroom",
        "value": "13",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom - Temperature",
          "possibleValues": "13",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-temperatureLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "value": "NO_LIGHT",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "reminder text"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f6e221d3-71d0-4e0a-b163-797cd76bb229",
    "author": "student2020-21",
    "ruleName": "regola5",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-13-9-18-262",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-color",
        "operator": "MORETHEN",
        "parent": "",
        "value": "90",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Heart Rate",
          "realName": "heartRate",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/physiological/@heartRate",
          "dimensionId": 1
        },
        "blockcomposer-type": "physiological-heartRate"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "YELLOW",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - Color",
          "possibleValues": {
            "WHITE": "White",
            "BLUE": "Blue",
            "BEIGE": "Beige",
            "PURPLE": "Purple",
            "GREEN": "Green",
            "RED": "Red",
            "AZURE": "Azure",
            "PINK": "Pink",
            "CREAM": "Cream",
            "VIOLET": "Violet",
            "YELLOW": "Yellow",
            "BROWN": "Brown",
            "ORANGE": "Orange"
          },
          "realName": "color",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@color",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-color"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "reminder text"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "SMS"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "58490467-e378-4520-a4b4-2fb9fe0cd1e4",
    "author": "student2020-22",
    "ruleName": "regola1",
    "priority": 1,
    "goal": "none",
    "timestamp": "20-10-2020-16-13-54-882",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Microwave",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Microwave - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 338
        },
        "blockcomposer-type": "microwave-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Controlla recipiente"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Beatrice"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "97d9cd02-3059-431c-b517-fbec8821adad",
    "author": "student2020-22",
    "ruleName": "regola2",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-16-53-0-133",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "DARK",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "23:00",
          "00:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bedroom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-lightLevel"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Orario riposo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Beatrice"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "489a1ab7-e949-4e99-99c0-a1ecda9e8a28",
    "author": "student2020-22",
    "ruleName": "regola3",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-17-35-1-856",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroom-windowSensor",
        "operator": "LESSTHEN",
        "parent": "Bedroom",
        "value": "18",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Temperature",
          "realName": "temperatureLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@temperatureLevel",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-temperatureLevel"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Chiudi finestra camera"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Beatrice"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "223ff7c1-8e07-4160-a6fa-1d2b9885bc6a",
    "author": "student2020-22",
    "ruleName": "regola4",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-18-6-14-199",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "corridorLightStrip-state",
        "operator": "EQUAL",
        "parent": "Corridor",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "Corridor - Motion",
          "realName": "motion",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@motion",
          "dimensionId": 7
        },
        "blockcomposer-type": "corridor-motion"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Corridor Light Strip",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Corridor Light Strip - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 13
        },
        "blockcomposer-type": "corridorLightStrip-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Luci corridoio inutilizzate, spegnimento"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "Beatrice"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Corridor/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "802d471d-4f00-42ca-9315-d1d2df58dfeb",
    "author": "student2020-22",
    "ruleName": "regola5",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-18-8-56-924",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "entranceLight-state",
        "operator": "INSIDE",
        "parent": "",
        "value": "HOUSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Entrance Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Entrance Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 329
        },
        "blockcomposer-type": "entranceLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Disattiva connessione dati"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Beatrice"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "906e4ede-4ae4-4f39-b76c-d5e5dd15f9f5",
    "author": "student2020-23",
    "ruleName": "regola 1",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-10-37-20-883",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Chiudi la finestra"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "222ac1fc-b9e8-40e2-b74f-18aff10d9075",
    "author": "student2020-23",
    "ruleName": "regola 2",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-11-13-13-805",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "",
          ""
        ],
        "isNot": true,
        "element": {
          "displayedName": "Entrance - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Entrance/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Entrance",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Porta aperta"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "608770bc-a4fc-4847-a328-e06df3dd7aa6",
    "author": "student2020-23",
    "ruleName": "regola 3",
    "priority": 1,
    "goal": "none",
    "timestamp": "2-11-2020-14-2-30-932",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "EQUAL",
        "parent": "Bathroom",
        "value": "10",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom - Noise Level",
          "realName": "noiseLevel",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "environment/@noiseLevel",
          "dimensionId": 6
        },
        "blockcomposer-type": "bathroom-noiseLevel"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"chiudi l'acqua\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "92d540ed-78c3-467c-ae04-7ed4e741a8e4",
    "author": "student2020-23",
    "ruleName": "regola 4",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-11-52-23-653",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroom-windowSensor",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bedroom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 5
        },
        "blockcomposer-type": "bedroom-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Sta piovendo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Corridor/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Corridor",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "d60414e4-a5ce-4944-a7e2-46f2e5c9a1dc",
    "author": "student2020-23",
    "ruleName": "regola 5",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-12-3-31-359",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": "600",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bedroom",
          "possibleValues": "600",
          "realName": "timeInsideBedroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBedroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBedroom"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "Alarms",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Sveglia!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a52e6930-4690-4c40-9027-0ce2ede78385",
    "author": "student2020-24",
    "ruleName": "regola 1",
    "priority": 1,
    "goal": "wellbeing",
    "timestamp": "20-10-2020-16-50-26-634",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "reminder text"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "622823b5-0c16-4d12-8791-44810e3eaeaa",
    "author": "student2020-24",
    "ruleName": "regola 2",
    "priority": 1,
    "goal": "none",
    "timestamp": "20-10-2020-18-50-53-988",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "2020-11-20",
          "23:00",
          "07:40"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "luce nel bagno accesa"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "ef5e9914-017e-4d5a-8a03-5dc5beb24a79",
    "author": "student2020-24",
    "ruleName": "regola 3",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-16-56-18-565",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingRoom-doorSensor",
        "operator": "EQUAL",
        "parent": "",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Rain",
          "realName": "rain",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/currentWeather/@rain",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-rain"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-doorSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Hai lasciato le finestre aperte!"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "ed2bcec2-770e-47dc-8587-0eaa74dd2416",
    "author": "student2020-24",
    "ruleName": "regola 4",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-17-39-8-378",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bedroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "00:00",
          "endTime": "00:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bedroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bedroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 11
        },
        "blockcomposer-type": "bedroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bedroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOff",
        "timing": "sustained",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "OFF",
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "è mezzanotte"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "TWO_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "4fc8858a-cd6b-4f1a-b7e8-93aa17d970d3",
    "author": "student2020-24",
    "ruleName": "regola 5",
    "priority": 1,
    "goal": "none",
    "timestamp": "21-10-2020-18-24-47-30",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-state",
        "operator": "INSIDE",
        "parent": "",
        "value": "LIVINGROOM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Type of Proximity",
          "possibleValues": {
            "OUTSIDE": "Outside",
            "INSIDE": "Inside"
          },
          "realName": "typeOfProximity",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "user/position/relativePosition/@typeOfProximity",
          "dimensionId": 1
        },
        "blockcomposer-type": "relativePosition-typeOfProximity"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "LivingRoom-GREATLuminare",
          "xPath": "applianceState/LivingRoom/greatLuminare",
          "type": "custom:greatLuminare"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Living Room",
        "nextElement": "none",
        "type": "custom:greatLuminare",
        "value": null,
        "values": [],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "LivingRoom-GREATLuminare",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "luce accesa"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "me"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "e8c3719d-f690-4af6-a32a-d04e181fccb3",
    "author": "student2020-25",
    "ruleName": "uno",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-12-45-41-500",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Fridge",
        "value": "OPEN",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Fridge - Door",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "door",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/appliance/@door",
          "dimensionId": 337
        },
        "blockcomposer-type": "fridge-door"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Chiudi la porta del frigo"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "Sara"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "9ea8641c-a8bc-4720-9525-ea6bcef64db8",
    "author": "student2020-25",
    "ruleName": "due",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-13-0-8-76",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "20:00",
          "05:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "AllLight",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "la luce del bagno è spenta"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "sequential"
      },
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "none",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f9d4f430-c28b-49bc-a77d-5cd345868fd9",
    "author": "student2020-25",
    "ruleName": "tre",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-13-16-51-461",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "kitchen-windowSensor",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Smoke Sensor",
          "realName": "smokeSensor",
          "triggerType": "both",
          "type": "BOOLEAN",
          "unit": "",
          "xPath": "environment/@smokeSensor",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-smokeSensor"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen - Window Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "windowSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@windowSensor",
          "dimensionId": 4
        },
        "blockcomposer-type": "kitchen-windowSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "apri la finestra"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "cf9cca3a-6357-4006-9a7d-47a169a9c6dd",
    "author": "student2020-25",
    "ruleName": "quattro",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-13-11-29-170",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-temperature",
        "operator": "EQUAL",
        "parent": "LivingRoom",
        "value": "DARK",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "LivingRoom - Light Level",
          "possibleValues": {
            "DAY_LIGHT": "Day Light",
            "LOW_LIGHT": "Low Light",
            "VERY_LOW_LIGHT": "Very Low Light",
            "DARK": "Dark",
            "NORMAL_LIGHT": "Normal Light",
            "NO_LIGHT": "No Light"
          },
          "realName": "lightLevel",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@lightLevel",
          "dimensionId": 3
        },
        "blockcomposer-type": "livingRoom-lightLevel"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "BiorhythmLight",
        "operator": "LESSTHEN",
        "parent": "Living Room Light",
        "value": "20",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - Temperature",
          "realName": "temperature",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "technology/light/@temperature",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-temperature"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Biorhythm Scene",
          "realName": "BiorhythmLight",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "value": "BiorhythmLight",
        "timing": "extended",
        "parent": "Living Room",
        "nextElement": "Alarms",
        "type": "invokeFunctions:lightScene",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "fredda"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f2057522-b94d-42e2-85dc-a99397149b47",
    "author": "student2020-25",
    "ruleName": "cinque",
    "priority": 1,
    "goal": "none",
    "timestamp": "17-10-2020-13-23-46-644",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "2",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bathroom",
          "possibleValues": "2",
          "realName": "timeInsideBathroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBathroom"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "la luce era spenta"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "1c158300-d292-4a78-83ad-2352d71f820e",
    "author": "student2020-26",
    "ruleName": "Regola1",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-11-14-25-76",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "Kitchen Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Kitchen Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 10
        },
        "blockcomposer-type": "kitchenLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "Luce cucina rimasta accesa"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "f963f9c5-6c65-479e-a2fc-5627a0851060",
    "author": "student2020-26",
    "ruleName": "Regola 2",
    "priority": 1,
    "goal": "none",
    "timestamp": "16-10-2020-11-43-36-939",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Alarms",
        "operator": "EQUAL",
        "parent": "Entrance",
        "value": "CLOSE",
        "startGroup": 0,
        "closeGroup": 0,
        "notValue": [
          "",
          "22:00",
          "07:00"
        ],
        "isNot": true,
        "element": {
          "displayedName": "Entrance - Door Sensor",
          "possibleValues": {
            "CLOSE": "Close",
            "OPEN": "Open"
          },
          "realName": "doorSensor",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/@doorSensor",
          "dimensionId": 2
        },
        "blockcomposer-type": "entrance-doorSensor"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Alarms",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Alarms",
        "nextElement": "Hue color light bedroom",
        "type": "custom:string",
        "values": [
          {
            "description": "Alarm Text",
            "displayedName": "Text",
            "realName": "alarmText",
            "type": "custom:string",
            "value": "Porta Aperta"
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "THREE_TIMES"
          },
          {
            "description": "Alarm recipient",
            "displayedName": "Recipient",
            "realName": "alarmRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Hue color light bedroom",
          "xPath": "applianceState/Bedroom/lightColor",
          "type": "update:lightColor"
        },
        "operator": "turnOn",
        "timing": "extended",
        "parent": "Bedroom",
        "nextElement": "none",
        "type": "update:lightColor",
        "value": "#cc0000",
        "duration": "15",
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "257cf1df-2cfe-4d2e-856a-03ec9b3672aa",
    "author": "student2020-26",
    "ruleName": "3",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-20-6-52-146",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "dateTime-localTime",
        "operator": "MORETHEN",
        "parent": "",
        "value": "300",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Sleep Duration",
          "realName": "sleepDuration",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/activity/sleep/@sleepDuration",
          "dimensionId": 1
        },
        "blockcomposer-type": "sleep-sleepDuration"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Reminders",
        "operator": "EQUAL",
        "parent": "",
        "value": {
          "startTime": "12:00",
          "endTime": "00:00"
        },
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time between: ",
          "realName": "localTime",
          "triggerType": "both",
          "type": "TIME",
          "unit": "",
          "xPath": "environment/dateTime/@localTime",
          "dimensionId": 14
        },
        "blockcomposer-type": "dateTime-localTime"
      }
    ],
    "actions": [
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"Alzati!!!\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "a35d25dc-0ec9-4399-a64f-db2fc1c81b70",
    "author": "student2020-26",
    "ruleName": "4",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-20-9-38-656",
    "triggers": [
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "livingroomLight-state",
        "operator": "EQUAL",
        "parent": "",
        "value": "THUNDERSTORM",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Outdoor Condition",
          "possibleValues": {
            "FEW_CLOUDS": "Few Clouds",
            "RAIN": "Rain",
            "CLEAR_SKY": "Clear Sky",
            "BROKEN_CLOUDS": "Broken Clouds",
            "SCATTERED_CLOUDS": "Scattered Clouds",
            "SNOW": "Snow",
            "SHOWER_RAIN": "Shower Rain",
            "THUNDERSTORM": "Thunderstorm",
            "MIST": "Mist",
            "FOG": "Fog"
          },
          "realName": "outdoorCondition",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "environment/currentWeather/@outdoorCondition",
          "dimensionId": 14
        },
        "blockcomposer-type": "currentWeather-outdoorCondition"
      },
      {
        "triggerType": "condition",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "Relax",
        "operator": "EQUAL",
        "parent": "Living Room Light",
        "value": "ON",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Living Room Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 9
        },
        "blockcomposer-type": "livingroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "Relaxing Scene",
          "realName": "Relax",
          "xPath": "applianceState/LivingRoom/@scene",
          "type": "invokeFunctions:lightScene"
        },
        "operator": "is",
        "timing": "extended",
        "parent": "LivingRoom",
        "type": "invokeFunctions:lightScene",
        "value": "Relax",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"fuori piove\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "NOTIFICATION"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  },
  {
    "id": "87275baa-5696-40ff-8746-41b74c0835fb",
    "author": "student2020-26",
    "ruleName": "6",
    "priority": 1,
    "goal": "none",
    "timestamp": "25-10-2020-20-12-29-941",
    "triggers": [
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "and",
        "nextElement": "bathroomLight-state",
        "operator": "MORETHEN",
        "parent": "",
        "value": "20",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Time Inside Bathroom",
          "possibleValues": "20",
          "realName": "timeInsideBathroom",
          "triggerType": "both",
          "type": "INTEGER",
          "unit": "",
          "xPath": "user/position/timeInsideARoom/@timeInsideBathroom",
          "dimensionId": 1
        },
        "blockcomposer-type": "timeInsideARoom-timeInsideBathroom"
      },
      {
        "triggerType": "event",
        "depth": 0,
        "nextOperator": "rule",
        "nextElement": "AllLight",
        "operator": "EQUAL",
        "parent": "Bathroom Light",
        "value": "OFF",
        "startGroup": 0,
        "closeGroup": 1,
        "notValue": [],
        "isNot": false,
        "element": {
          "displayedName": "Bathroom Light - State",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "realName": "state",
          "triggerType": "both",
          "type": "ENUM",
          "unit": "",
          "xPath": "technology/light/@state",
          "dimensionId": 322
        },
        "blockcomposer-type": "bathroomLight-state"
      }
    ],
    "actions": [
      {
        "action": {
          "displayedName": "All Light",
          "realName": "AllLight",
          "possibleValues": [
            "ON",
            "OFF"
          ],
          "xPath": "applianceState/Bathroom/allLight",
          "type": "invokeFunctions:changeApplianceState"
        },
        "operator": "turnOn",
        "timing": "sustained",
        "parent": "Bathroom",
        "nextElement": "Reminders",
        "type": "invokeFunctions:changeApplianceState",
        "value": "ON",
        "nextOperator": "parallel"
      },
      {
        "action": {
          "realName": "Reminders",
          "type": "custom:string"
        },
        "timing": "immediate",
        "parent": "Reminders",
        "nextElement": "none",
        "type": "custom:string",
        "values": [
          {
            "description": "Reminder Text",
            "displayedName": "Text",
            "realName": "reminderText",
            "type": "custom:string",
            "value": "\"20 minuti in bagno\""
          },
          {
            "description": "Notification mode",
            "displayedName": "Notification mode",
            "realName": "notificationMode",
            "type": "custom:notificationMode",
            "value": "VOICE"
          },
          {
            "description": "How many times alert should be sent",
            "displayedName": "Repetition",
            "realName": "repetition",
            "type": "custom:repetitionType",
            "value": "ONCE"
          },
          {
            "description": "Reminder recipient",
            "displayedName": "Recipient",
            "realName": "reminderRecipient",
            "type": "custom:string",
            "value": "send to"
          }
        ],
        "nextOperator": "none"
      }
    ],
    "actionMode": "mixed"
  }
]
